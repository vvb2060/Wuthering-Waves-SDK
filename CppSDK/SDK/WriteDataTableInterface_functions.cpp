#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WriteDataTableInterface

#include "Basic.hpp"

#include "WriteDataTableInterface_classes.hpp"
#include "WriteDataTableInterface_parameters.hpp"


namespace SDK
{

// Function WriteDataTableInterface.WriteDataTableInterface_C.WriteDataTableFunction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       InputTable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    InputData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void IWriteDataTableInterface_C::WriteDataTableFunction(class UDataTable* InputTable, const class FString& InputData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("WriteDataTableInterface_C", "WriteDataTableFunction");

	Params::WriteDataTableInterface_C_WriteDataTableFunction Parms{};

	Parms.InputTable = InputTable;
	Parms.InputData = std::move(InputData);

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

