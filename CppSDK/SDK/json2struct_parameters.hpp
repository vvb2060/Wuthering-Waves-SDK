#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: json2struct

#include "Basic.hpp"

#include "json2struct_structs.hpp"


namespace SDK::Params
{

// Function json2struct.json2structBPLibrary.json2structBP
// 0x0020 (0x0020 - 0x0000)
struct json2structBPLibrary_json2structBP final
{
public:
	class UStruct*                                Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 json;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJson2structParseResult                       ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(json2structBPLibrary_json2structBP) == 0x000008, "Wrong alignment on json2structBPLibrary_json2structBP");
static_assert(sizeof(json2structBPLibrary_json2structBP) == 0x000020, "Wrong size on json2structBPLibrary_json2structBP");
static_assert(offsetof(json2structBPLibrary_json2structBP, Out) == 0x000000, "Member 'json2structBPLibrary_json2structBP::Out' has a wrong offset!");
static_assert(offsetof(json2structBPLibrary_json2structBP, json) == 0x000008, "Member 'json2structBPLibrary_json2structBP::json' has a wrong offset!");
static_assert(offsetof(json2structBPLibrary_json2structBP, ReturnValue) == 0x000018, "Member 'json2structBPLibrary_json2structBP::ReturnValue' has a wrong offset!");

// Function json2struct.json2structBPLibrary.WriteStructBP
// 0x0070 (0x0070 - 0x0000)
struct json2structBPLibrary_WriteStructBP final
{
public:
	class UStruct*                                inStruct;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJson2struct_filter                    filter;                                            // 0x0008(0x0050)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Json;                                              // 0x0058(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJson2structParseResult                       ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(json2structBPLibrary_WriteStructBP) == 0x000008, "Wrong alignment on json2structBPLibrary_WriteStructBP");
static_assert(sizeof(json2structBPLibrary_WriteStructBP) == 0x000070, "Wrong size on json2structBPLibrary_WriteStructBP");
static_assert(offsetof(json2structBPLibrary_WriteStructBP, inStruct) == 0x000000, "Member 'json2structBPLibrary_WriteStructBP::inStruct' has a wrong offset!");
static_assert(offsetof(json2structBPLibrary_WriteStructBP, filter) == 0x000008, "Member 'json2structBPLibrary_WriteStructBP::filter' has a wrong offset!");
static_assert(offsetof(json2structBPLibrary_WriteStructBP, Json) == 0x000058, "Member 'json2structBPLibrary_WriteStructBP::Json' has a wrong offset!");
static_assert(offsetof(json2structBPLibrary_WriteStructBP, ReturnValue) == 0x000068, "Member 'json2structBPLibrary_WriteStructBP::ReturnValue' has a wrong offset!");

// Function json2struct.JsonAsyncNode.json2structUrl
// 0x0030 (0x0030 - 0x0000)
struct JsonAsyncNode_json2structUrl final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 requestJson;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          WC;                                                // 0x0020(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJsonAsyncNode*                         ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonAsyncNode_json2structUrl) == 0x000008, "Wrong alignment on JsonAsyncNode_json2structUrl");
static_assert(sizeof(JsonAsyncNode_json2structUrl) == 0x000030, "Wrong size on JsonAsyncNode_json2structUrl");
static_assert(offsetof(JsonAsyncNode_json2structUrl, URL) == 0x000000, "Member 'JsonAsyncNode_json2structUrl::URL' has a wrong offset!");
static_assert(offsetof(JsonAsyncNode_json2structUrl, requestJson) == 0x000010, "Member 'JsonAsyncNode_json2structUrl::requestJson' has a wrong offset!");
static_assert(offsetof(JsonAsyncNode_json2structUrl, WC) == 0x000020, "Member 'JsonAsyncNode_json2structUrl::WC' has a wrong offset!");
static_assert(offsetof(JsonAsyncNode_json2structUrl, ReturnValue) == 0x000028, "Member 'JsonAsyncNode_json2structUrl::ReturnValue' has a wrong offset!");

}

