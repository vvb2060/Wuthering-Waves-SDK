#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_CutSkill_Passive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SCameraModifier_Settings_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SSkillBehaviorAction_structs.hpp"
#include "SCameraModifier_Condition_structs.hpp"
#include "GA_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_CutSkill_Passive.GA_CutSkill_Passive_C
// 0x0458 (0x09C0 - 0x0568)
class UGA_CutSkill_Passive_C final : public UGA_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_CutSkill_Passive_C;              // 0x0568(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         当前瞄准子弹;                                      // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         当前瞄准角度;                                      // 0x0574(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          初始位置;                                          // 0x0578(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              输入缓存;                                          // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         子弹实体ID;                                        // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否有初始输入;                                    // 0x059C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59D[0x3];                                      // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         输入向量COS值;                                     // 0x05A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         输入轴X值;                                         // 0x05A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         输入轴Y值;                                         // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         缓存瞄准角度;                                      // 0x05AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          延迟生成子弹;                                      // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          是否斩击完成;                                      // 0x05B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B2[0x2];                                      // 0x05B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         投石子弹_外圈;                                     // 0x05B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         投石子弹_内圈;                                     // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCameraModifier_Condition>     Camera_Modifier_Contions;                          // 0x05C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSCameraModifier_Settings              Camera_Modify_Settings;                            // 0x05D0(0x0118)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVectorDouble                          内圈位置;                                          // 0x06E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSkillBehaviorAction                  LocationAction;                                    // 0x0700(0x02C0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_CutSkill_Passive(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	void OnCompleted_5D118C384AE61F1C80292E8125113E31();
	void OnBlendOut_5D118C384AE61F1C80292E8125113E31();
	void OnInterrupted_5D118C384AE61F1C80292E8125113E31();
	void OnCancelled_5D118C384AE61F1C80292E8125113E31();
	void OnTick_5D118C384AE61F1C80292E8125113E31();
	void OnFinish_DBE1F4F54CADF3201EF07E935872DF19();
	void OnCompleted_5D118C384AE61F1C80292E81E77B5113();
	void OnBlendOut_5D118C384AE61F1C80292E81E77B5113();
	void OnInterrupted_5D118C384AE61F1C80292E81E77B5113();
	void OnCancelled_5D118C384AE61F1C80292E81E77B5113();
	void OnTick_5D118C384AE61F1C80292E81E77B5113();
	void OnCompleted_5D118C384AE61F1C80292E81705C0EFC();
	void OnBlendOut_5D118C384AE61F1C80292E81705C0EFC();
	void OnInterrupted_5D118C384AE61F1C80292E81705C0EFC();
	void OnCancelled_5D118C384AE61F1C80292E81705C0EFC();
	void OnTick_5D118C384AE61F1C80292E81705C0EFC();
	void EventReceived_18B59F5945020DB23C42FD88862D2DA4(const struct FGameplayEventData& Payload);
	void 获取镜头变换(struct FTransformDouble* 镜头变换);
	float 计算当前输入向量余弦值();
	void 依据斩击方向选择匹配斩切线特效();
	void 依据斩击方向选择匹配切屏特效();
	void 获取投石子弹();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_CutSkill_Passive_C">();
	}
	static class UGA_CutSkill_Passive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_CutSkill_Passive_C>();
	}
};
static_assert(alignof(UGA_CutSkill_Passive_C) == 0x000008, "Wrong alignment on UGA_CutSkill_Passive_C");
static_assert(sizeof(UGA_CutSkill_Passive_C) == 0x0009C0, "Wrong size on UGA_CutSkill_Passive_C");
static_assert(offsetof(UGA_CutSkill_Passive_C, UberGraphFrame_GA_CutSkill_Passive_C) == 0x000568, "Member 'UGA_CutSkill_Passive_C::UberGraphFrame_GA_CutSkill_Passive_C' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 当前瞄准子弹) == 0x000570, "Member 'UGA_CutSkill_Passive_C::当前瞄准子弹' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 当前瞄准角度) == 0x000574, "Member 'UGA_CutSkill_Passive_C::当前瞄准角度' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 初始位置) == 0x000578, "Member 'UGA_CutSkill_Passive_C::初始位置' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 输入缓存) == 0x000590, "Member 'UGA_CutSkill_Passive_C::输入缓存' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 子弹实体ID) == 0x000598, "Member 'UGA_CutSkill_Passive_C::子弹实体ID' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 是否有初始输入) == 0x00059C, "Member 'UGA_CutSkill_Passive_C::是否有初始输入' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 输入向量COS值) == 0x0005A0, "Member 'UGA_CutSkill_Passive_C::输入向量COS值' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 输入轴X值) == 0x0005A4, "Member 'UGA_CutSkill_Passive_C::输入轴X值' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 输入轴Y值) == 0x0005A8, "Member 'UGA_CutSkill_Passive_C::输入轴Y值' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 缓存瞄准角度) == 0x0005AC, "Member 'UGA_CutSkill_Passive_C::缓存瞄准角度' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 延迟生成子弹) == 0x0005B0, "Member 'UGA_CutSkill_Passive_C::延迟生成子弹' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 是否斩击完成) == 0x0005B1, "Member 'UGA_CutSkill_Passive_C::是否斩击完成' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 投石子弹_外圈) == 0x0005B4, "Member 'UGA_CutSkill_Passive_C::投石子弹_外圈' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 投石子弹_内圈) == 0x0005B8, "Member 'UGA_CutSkill_Passive_C::投石子弹_内圈' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, Camera_Modifier_Contions) == 0x0005C0, "Member 'UGA_CutSkill_Passive_C::Camera_Modifier_Contions' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, Camera_Modify_Settings) == 0x0005D0, "Member 'UGA_CutSkill_Passive_C::Camera_Modify_Settings' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, 内圈位置) == 0x0006E8, "Member 'UGA_CutSkill_Passive_C::内圈位置' has a wrong offset!");
static_assert(offsetof(UGA_CutSkill_Passive_C, LocationAction) == 0x000700, "Member 'UGA_CutSkill_Passive_C::LocationAction' has a wrong offset!");

}

