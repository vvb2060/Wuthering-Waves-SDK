#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroVolumeCloud_Local

#include "Basic.hpp"

#include "KuroRenderingRuntimeBPPlugin_structs.hpp"


namespace SDK::Params
{

// Function BP_KuroVolumeCloud_Local.BP_KuroVolumeCloud_Local_C.ExecuteUbergraph_BP_KuroVolumeCloud_Local
// 0x0040 (0x0040 - 0x0000)
struct BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local) == 0x000008, "Wrong alignment on BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local");
static_assert(sizeof(BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local) == 0x000040, "Wrong size on BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local");
static_assert(offsetof(BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local, EntryPoint) == 0x000000, "Member 'BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local, K2Node_Event_OtherActor) == 0x000008, "Member 'BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local, CallFunc_IsValid_ReturnValue_2) == 0x000039, "Member 'BP_KuroVolumeCloud_Local_C_ExecuteUbergraph_BP_KuroVolumeCloud_Local::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_KuroVolumeCloud_Local.BP_KuroVolumeCloud_Local_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_KuroVolumeCloud_Local_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroVolumeCloud_Local_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_KuroVolumeCloud_Local_C_ReceiveTick");
static_assert(sizeof(BP_KuroVolumeCloud_Local_C_ReceiveTick) == 0x000004, "Wrong size on BP_KuroVolumeCloud_Local_C_ReceiveTick");
static_assert(offsetof(BP_KuroVolumeCloud_Local_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_KuroVolumeCloud_Local_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_KuroVolumeCloud_Local.BP_KuroVolumeCloud_Local_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_KuroVolumeCloud_Local_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroVolumeCloud_Local_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_KuroVolumeCloud_Local_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_KuroVolumeCloud_Local_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_KuroVolumeCloud_Local_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_KuroVolumeCloud_Local_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_KuroVolumeCloud_Local_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_KuroVolumeCloud_Local.BP_KuroVolumeCloud_Local_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct BP_KuroVolumeCloud_Local_C_UserConstructionScript final
{
public:
	EBP_EWorldType                                Editor_Type;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KuroVolumeCloud_Local_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_KuroVolumeCloud_Local_C_UserConstructionScript");
static_assert(sizeof(BP_KuroVolumeCloud_Local_C_UserConstructionScript) == 0x000002, "Wrong size on BP_KuroVolumeCloud_Local_C_UserConstructionScript");
static_assert(offsetof(BP_KuroVolumeCloud_Local_C_UserConstructionScript, Editor_Type) == 0x000000, "Member 'BP_KuroVolumeCloud_Local_C_UserConstructionScript::Editor_Type' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Local_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_KuroVolumeCloud_Local_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

