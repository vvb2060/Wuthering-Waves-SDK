#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BaseRunAnimal

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "EAnimalEcologicalState_structs.hpp"
#include "KuroAnim_structs.hpp"
#include "KuroAnim_classes.hpp"
#include "ECharState_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_BaseRunAnimal.ABP_BaseRunAnimal_C
// 0x3420 (0x3B70 - 0x0750)
class UABP_BaseRunAnimal_C : public UKuroAnimInstance
{
public:
	uint8                                         Pad_748[0x8];                                      // 0x0748(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0750(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0758(0x0038)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0790(0x0138)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x08C8(0x0038)()
	struct FAnimNode_SightLock                    AnimGraphNode_SightLock;                           // 0x0900(0x01D0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0AD0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0AF0(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0B10(0x0138)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0C48(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_53;                 // 0x0C80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_52;                 // 0x0CA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_51;                 // 0x0CD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x0CF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x0D20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x0D48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x0D70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x0D98(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x0DC0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_32;                      // 0x0E50(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x0E88(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_31;                      // 0x0F18(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x0F50(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_30;                      // 0x0FE0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x1018(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_29;                      // 0x10A8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x10E0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_28;                      // 0x1170(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x11A8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_27;                      // 0x1238(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x1270(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_26;                      // 0x1300(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x1338(0x0148)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x1480(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x14A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x14D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x14F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x1520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x1548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x1570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x1598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x15C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x15E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x1610(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x1638(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x1660(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x1688(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x16B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x16D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x1700(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x1728(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x1750(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x1778(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_25;                      // 0x1808(0x0038)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x1840(0x0060)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x18A0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x18D8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x1968(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x19A0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x1A30(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x1A68(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x1AF8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x1B30(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x1BC0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x1BF8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x1C88(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x1CC0(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x1E08(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x1E40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x1E68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x1E90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x1EB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x1EE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x1F08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1F30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1F58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x1F80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x1FA8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x1FD0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x2060(0x0038)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x2098(0x0060)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x20F8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x2130(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x21C0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x21F8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x2288(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x22C0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x2350(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x2388(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x2418(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x2450(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x24E0(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x2518(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x2660(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x2698(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x2728(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x2760(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x27F0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2828(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x28B8(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x28F0(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x2920(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x2958(0x0148)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x2AA0(0x01B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x2C50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x2C78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x2CA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x2CC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x2CF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x2D18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x2D40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x2D68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x2D90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x2DB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x2DE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x2E08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x2E30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x2E58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2E80(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x2EA8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x2F38(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2F70(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x3000(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x3038(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x30C8(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x3100(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x3128(0x00F8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x3220(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x3258(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x3280(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x3310(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x3348(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x3378(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x33B0(0x0148)()
	uint8                                         Pad_34F8[0x8];                                     // 0x34F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x3500(0x01B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x36B0(0x0060)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x3710(0x0070)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x3780(0x0038)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x37B8(0x00C0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x3878(0x00C0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x3938(0x00C0)()
	TArray<class UAnimSequence*>                  待机表演配置;                                      // 0x39F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly)
	class ATsBaseCharacter_C*                     角色蓝图;                                          // 0x3A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 角色网格体;                                        // 0x3A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimalEcologicalState                        生态表现状态;                                      // 0x3A18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          状态机初始化;                                      // 0x3A19(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1A[0x2];                                     // 0x3A1A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IdleActionIndex;                                   // 0x3A1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          IdleAnim;                                          // 0x3A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequence*>                  交互表演配置;                                      // 0x3A28(0x0010)(Edit, BlueprintVisible)
	int32                                         InteractActionIndex;                               // 0x3A38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3C[0x4];                                     // 0x3A3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          InteractAnim;                                      // 0x3A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SightDirect;                                       // 0x3A48(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESightLockMode                                SightLockMode;                                     // 0x3A54(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A55[0x3];                                     // 0x3A55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WalkRunParam;                                      // 0x3A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         左右跑参数;                                        // 0x3A5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHaveInput;                                        // 0x3A60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIdleAction;                                       // 0x3A61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          是否警觉;                                          // 0x3A62(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          是否起跑转身;                                      // 0x3A63(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          起跑左转;                                          // 0x3A64(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInteractAction;                                   // 0x3A65(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          受到攻击;                                          // 0x3A66(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          起飞;                                              // 0x3A67(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSitDown;                                          // 0x3A68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A69[0x7];                                     // 0x3A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class UAnimSequence*> 其他动作配置;                                    // 0x3A70(0x0050)(Edit, BlueprintVisible)
	float                                         ActionTime;                                        // 0x3AC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC4[0x4];                                     // 0x3AC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, TSoftObjectPtr<class UPD_CharacterControllerData_C>> 材质配置;         // 0x3AC8(0x0050)(Edit, BlueprintVisible)
	TMap<struct FGameplayTag, class UAnimMontage*> 蒙太奇表演配置;                                   // 0x3B18(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          系统UI;                                            // 0x3B68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGetDown;                                          // 0x3B69(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_BaseRunAnimal(int32 EntryPoint);
	void SystemUiEnd();
	void SystemUiStart();
	void FeedStart(const struct FGameplayTag& GameplayTag);
	void TakeOffStart();
	void AlertStart();
	void UnderAttackStart();
	void IdleStart();
	void InteractStart();
	void NoneStateStart();
	void StateMachineInitializationComplete();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintInitializeAnimation();
	void AnimNotify_Animal_UnderAttackEnd();
	void AnimNotify_Animal_AlertEnd();
	void AnimNotify_Animal_InteractActionEnd();
	void AnimNotify_Animal_IdleActionEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_917F2B9D41AF9EC87991898BD6C207E9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_80410EA34013BBCB391AAAB1C368CC57();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_5C72ADEB48A9244F8F798D846651569B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_13A3A0424C3B5022728779A87FFE2552();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_368E31B5474BC72509A5519B64E3794A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_99C64F1245BA6F14C220E9B82D2B3FCC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_96DA532746BB03936925F4B0F5E24F48();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_261082164D250FB062E641B2CB98C549();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_4E467B6A4ACBC58853AA6B8CC429A7D5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_24B8E9944172EB4335ED6593E3F8BD4F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_19866BA345A7023365D45CB3DD10B5A1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_8E184F0C41B02556120BDDBC613B703B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_D21B71CF41005EC9DEDCF4A84C6C53BB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_0ACCD1B64E226DCBB6EA51B0CD6F4921();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_8AC447DA43E1891D7082A4A39EA70C17();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_A1CFEFA64D4BEA034EF84FA14A3FC792();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_E8377F0B4C84C5DD4196CFB2E7D44CE1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_10D6FB8E421C0AD65B82EA8700ABB24F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_0709478946319BBF0BF840B801DAEB35();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_A9CDC89D403878652E814AB43DD421B4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_9900DD464E49EA09E2D4F8B18CDD31D1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_4707A7A14AE382D2DE16B59F280E1AD6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_9E7C77CA4ACF6F50475B2CA51B365D84();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_6E0C55ED464D77C9403BE39A42AA3EC2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_BAAC30DF4E867493C9C3B28B403F1A52();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_EF45970F4ABF89776F29558C1C276842();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_180425454EE441A421DD628DD53FE2A8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_9A890530410B3CD6D4797A8538EA342B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_F9A2310E4B85152CFCC97A84EDB7EF56();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_0D2B24D4481CD55B42A27EA779A7F1CF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_EA2A46454076B45705487189EC6FFD84();
	void TakeOffEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_C20382F940EEADA6AE673D9A81210F1C();
	void AlertEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_B95B1327437100986649B89B92ECCF23();
	void UnderAttackEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_30F574864082A787DF7CC1BAB8BC0A53();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRunAnimal_AnimGraphNode_TransitionResult_D54499E04BD261C3638E51BCC167F397();
	void IdleEnd();
	void InteractEnd();
	void NoneStateEnd();
	void 更新待机表演();
	void OnIdleStart();
	void 更新交互表演();
	void 更新特殊交互表演();
	void OnInteractStart();
	void 更新视线();
	void OnAlertStart();
	void OnTakeOffStart();
	void OnUnderAttackStart();
	void 处理动作优先级();
	void 更新移动信息();
	void OnFeedStart(const struct FGameplayTag& GameplayTag);
	void OnSystemUIStart();
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void 基础层(struct FPoseLink* 基础层_0);
	void 后处理层(const struct FPoseLink& 基础输入, struct FPoseLink* 后处理层_0);
	void 演出层(const struct FPoseLink& 状态机输入, struct FPoseLink* 演出层_0);
	void GetCurrentActionTime(float* ActionTime_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_BaseRunAnimal_C">();
	}
	static class UABP_BaseRunAnimal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_BaseRunAnimal_C>();
	}
};
static_assert(alignof(UABP_BaseRunAnimal_C) == 0x000010, "Wrong alignment on UABP_BaseRunAnimal_C");
static_assert(sizeof(UABP_BaseRunAnimal_C) == 0x003B70, "Wrong size on UABP_BaseRunAnimal_C");
static_assert(offsetof(UABP_BaseRunAnimal_C, UberGraphFrame) == 0x000750, "Member 'UABP_BaseRunAnimal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_Root_3) == 0x000758, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_LinkedInputPose_1) == 0x000790, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_Root_2) == 0x0008C8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SightLock) == 0x000900, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SightLock' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_LocalToComponentSpace) == 0x000AD0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_ComponentToLocalSpace) == 0x000AF0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_LinkedInputPose) == 0x000B10, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_Root_1) == 0x000C48, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_53) == 0x000C80, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_53' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_52) == 0x000CA8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_52' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_51) == 0x000CD0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_51' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_50) == 0x000CF8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_49) == 0x000D20, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_48) == 0x000D48, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_47) == 0x000D70, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_46) == 0x000D98, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_25) == 0x000DC0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_32) == 0x000E50, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_32' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_24) == 0x000E88, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_31) == 0x000F18, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_31' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_23) == 0x000F50, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_30) == 0x000FE0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_30' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_22) == 0x001018, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_29) == 0x0010A8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_29' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_21) == 0x0010E0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_28) == 0x001170, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_28' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_20) == 0x0011A8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_27) == 0x001238, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_27' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_19) == 0x001270, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_26) == 0x001300, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_26' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateMachine_4) == 0x001338, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_45) == 0x001480, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_44) == 0x0014A8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_43) == 0x0014D0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_42) == 0x0014F8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_41) == 0x001520, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_40) == 0x001548, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_39) == 0x001570, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_38) == 0x001598, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_37) == 0x0015C0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_36) == 0x0015E8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_35) == 0x001610, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_34) == 0x001638, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_33) == 0x001660, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_32) == 0x001688, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_31) == 0x0016B0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_30) == 0x0016D8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_29) == 0x001700, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_28) == 0x001728, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_27) == 0x001750, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_18) == 0x001778, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_25) == 0x001808, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_25' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequenceEvaluator_1) == 0x001840, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_24) == 0x0018A0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_17) == 0x0018D8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_23) == 0x001968, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_16) == 0x0019A0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_22) == 0x001A30, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_15) == 0x001A68, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_21) == 0x001AF8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_14) == 0x001B30, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_20) == 0x001BC0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_13) == 0x001BF8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_19) == 0x001C88, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateMachine_3) == 0x001CC0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_18) == 0x001E08, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_26) == 0x001E40, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_25) == 0x001E68, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_24) == 0x001E90, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_23) == 0x001EB8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_22) == 0x001EE0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_21) == 0x001F08, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_20) == 0x001F30, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_19) == 0x001F58, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_18) == 0x001F80, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_17) == 0x001FA8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_12) == 0x001FD0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_17) == 0x002060, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequenceEvaluator) == 0x002098, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_16) == 0x0020F8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_11) == 0x002130, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_15) == 0x0021C0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_10) == 0x0021F8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_14) == 0x002288, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_9) == 0x0022C0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_13) == 0x002350, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_8) == 0x002388, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_12) == 0x002418, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_7) == 0x002450, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_11) == 0x0024E0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateMachine_2) == 0x002518, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_10) == 0x002660, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_6) == 0x002698, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_9) == 0x002728, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_5) == 0x002760, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_8) == 0x0027F0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_4) == 0x002828, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_7) == 0x0028B8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_UseCachedPose_1) == 0x0028F0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_6) == 0x002920, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateMachine_1) == 0x002958, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SaveCachedPose_1) == 0x002AA0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_16) == 0x002C50, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_15) == 0x002C78, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_14) == 0x002CA0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_13) == 0x002CC8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_12) == 0x002CF0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_11) == 0x002D18, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_10) == 0x002D40, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_9) == 0x002D68, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_8) == 0x002D90, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_7) == 0x002DB8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_6) == 0x002DE0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_5) == 0x002E08, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_4) == 0x002E30, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_3) == 0x002E58, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_2) == 0x002E80, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_3) == 0x002EA8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_5) == 0x002F38, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_2) == 0x002F70, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_4) == 0x003000, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer_1) == 0x003038, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_3) == 0x0030C8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult_1) == 0x003100, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_BlendSpacePlayer) == 0x003128, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_2) == 0x003220, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_TransitionResult) == 0x003258, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SequencePlayer) == 0x003280, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult_1) == 0x003310, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_UseCachedPose) == 0x003348, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateResult) == 0x003378, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_StateMachine) == 0x0033B0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_SaveCachedPose) == 0x003500, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_Slot) == 0x0036B0, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_Inertialization) == 0x003710, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_Root) == 0x003780, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_LinkedAnimLayer_2) == 0x0037B8, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_LinkedAnimLayer_1) == 0x003878, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, AnimGraphNode_LinkedAnimLayer) == 0x003938, "Member 'UABP_BaseRunAnimal_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 待机表演配置) == 0x0039F8, "Member 'UABP_BaseRunAnimal_C::待机表演配置' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 角色蓝图) == 0x003A08, "Member 'UABP_BaseRunAnimal_C::角色蓝图' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 角色网格体) == 0x003A10, "Member 'UABP_BaseRunAnimal_C::角色网格体' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 生态表现状态) == 0x003A18, "Member 'UABP_BaseRunAnimal_C::生态表现状态' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 状态机初始化) == 0x003A19, "Member 'UABP_BaseRunAnimal_C::状态机初始化' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, IdleActionIndex) == 0x003A1C, "Member 'UABP_BaseRunAnimal_C::IdleActionIndex' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, IdleAnim) == 0x003A20, "Member 'UABP_BaseRunAnimal_C::IdleAnim' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 交互表演配置) == 0x003A28, "Member 'UABP_BaseRunAnimal_C::交互表演配置' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, InteractActionIndex) == 0x003A38, "Member 'UABP_BaseRunAnimal_C::InteractActionIndex' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, InteractAnim) == 0x003A40, "Member 'UABP_BaseRunAnimal_C::InteractAnim' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, SightDirect) == 0x003A48, "Member 'UABP_BaseRunAnimal_C::SightDirect' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, SightLockMode) == 0x003A54, "Member 'UABP_BaseRunAnimal_C::SightLockMode' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, WalkRunParam) == 0x003A58, "Member 'UABP_BaseRunAnimal_C::WalkRunParam' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 左右跑参数) == 0x003A5C, "Member 'UABP_BaseRunAnimal_C::左右跑参数' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, bHaveInput) == 0x003A60, "Member 'UABP_BaseRunAnimal_C::bHaveInput' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, bIdleAction) == 0x003A61, "Member 'UABP_BaseRunAnimal_C::bIdleAction' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 是否警觉) == 0x003A62, "Member 'UABP_BaseRunAnimal_C::是否警觉' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 是否起跑转身) == 0x003A63, "Member 'UABP_BaseRunAnimal_C::是否起跑转身' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 起跑左转) == 0x003A64, "Member 'UABP_BaseRunAnimal_C::起跑左转' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, bInteractAction) == 0x003A65, "Member 'UABP_BaseRunAnimal_C::bInteractAction' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 受到攻击) == 0x003A66, "Member 'UABP_BaseRunAnimal_C::受到攻击' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 起飞) == 0x003A67, "Member 'UABP_BaseRunAnimal_C::起飞' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, bSitDown) == 0x003A68, "Member 'UABP_BaseRunAnimal_C::bSitDown' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 其他动作配置) == 0x003A70, "Member 'UABP_BaseRunAnimal_C::其他动作配置' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, ActionTime) == 0x003AC0, "Member 'UABP_BaseRunAnimal_C::ActionTime' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 材质配置) == 0x003AC8, "Member 'UABP_BaseRunAnimal_C::材质配置' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 蒙太奇表演配置) == 0x003B18, "Member 'UABP_BaseRunAnimal_C::蒙太奇表演配置' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, 系统UI) == 0x003B68, "Member 'UABP_BaseRunAnimal_C::系统UI' has a wrong offset!");
static_assert(offsetof(UABP_BaseRunAnimal_C, bGetDown) == 0x003B69, "Member 'UABP_BaseRunAnimal_C::bGetDown' has a wrong offset!");

}

