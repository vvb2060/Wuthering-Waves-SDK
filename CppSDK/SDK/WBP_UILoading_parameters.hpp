#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UILoading

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_UILoading.WBP_UILoading_C.ExecuteUbergraph_WBP_UILoading
// 0x0050 (0x0050 - 0x0000)
struct WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading) == 0x000004, "Wrong alignment on WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading");
static_assert(sizeof(WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading) == 0x000050, "Wrong size on WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading");
static_assert(offsetof(WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading, EntryPoint) == 0x000000, "Member 'WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000044, "Member 'WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading, CallFunc_FMin_ReturnValue) == 0x00004C, "Member 'WBP_UILoading_C_ExecuteUbergraph_WBP_UILoading::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function WBP_UILoading.WBP_UILoading_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_UILoading_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UILoading_C_Tick) == 0x000004, "Wrong alignment on WBP_UILoading_C_Tick");
static_assert(sizeof(WBP_UILoading_C_Tick) == 0x00003C, "Wrong size on WBP_UILoading_C_Tick");
static_assert(offsetof(WBP_UILoading_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_UILoading_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_UILoading_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_UILoading.WBP_UILoading_C.SetProgress
// 0x0080 (0x0080 - 0x0000)
struct WBP_UILoading_C_SetProgress final
{
public:
	float                                         InProgress;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClampProgress_0;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Forece;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
};
static_assert(alignof(WBP_UILoading_C_SetProgress) == 0x000008, "Wrong alignment on WBP_UILoading_C_SetProgress");
static_assert(sizeof(WBP_UILoading_C_SetProgress) == 0x000080, "Wrong size on WBP_UILoading_C_SetProgress");
static_assert(offsetof(WBP_UILoading_C_SetProgress, InProgress) == 0x000000, "Member 'WBP_UILoading_C_SetProgress::InProgress' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_SetProgress, ClampProgress_0) == 0x000004, "Member 'WBP_UILoading_C_SetProgress::ClampProgress_0' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_SetProgress, Forece) == 0x000008, "Member 'WBP_UILoading_C_SetProgress::Forece' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_SetProgress, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00000C, "Member 'WBP_UILoading_C_SetProgress::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_SetProgress, CallFunc_Round_ReturnValue) == 0x000010, "Member 'WBP_UILoading_C_SetProgress::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_SetProgress, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'WBP_UILoading_C_SetProgress::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_SetProgress, K2Node_MakeArray_Array) == 0x000058, "Member 'WBP_UILoading_C_SetProgress::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_SetProgress, CallFunc_Format_ReturnValue) == 0x000068, "Member 'WBP_UILoading_C_SetProgress::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_UILoading.WBP_UILoading_C.UpdateOtherLoadingProgerss
// 0x0010 (0x0010 - 0x0000)
struct WBP_UILoading_C_UpdateOtherLoadingProgerss final
{
public:
	float                                         InProgress;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UILoading_C_UpdateOtherLoadingProgerss) == 0x000004, "Wrong alignment on WBP_UILoading_C_UpdateOtherLoadingProgerss");
static_assert(sizeof(WBP_UILoading_C_UpdateOtherLoadingProgerss) == 0x000010, "Wrong size on WBP_UILoading_C_UpdateOtherLoadingProgerss");
static_assert(offsetof(WBP_UILoading_C_UpdateOtherLoadingProgerss, InProgress) == 0x000000, "Member 'WBP_UILoading_C_UpdateOtherLoadingProgerss::InProgress' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_UpdateOtherLoadingProgerss, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'WBP_UILoading_C_UpdateOtherLoadingProgerss::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_UpdateOtherLoadingProgerss, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'WBP_UILoading_C_UpdateOtherLoadingProgerss::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UILoading_C_UpdateOtherLoadingProgerss, CallFunc_FMin_ReturnValue) == 0x00000C, "Member 'WBP_UILoading_C_UpdateOtherLoadingProgerss::CallFunc_FMin_ReturnValue' has a wrong offset!");

}

