#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GPUNPCData

#include "Basic.hpp"


namespace SDK::Params
{

// Function GPUNPCData.GPUNPCData_C.随机起始动画时间噪声贴图
// 0x0020 (0x0020 - 0x0000)
struct GPUNPCData_C_随机起始动画时间噪声贴图 final
{
public:
	class UTexture2D*                             OutNoiseTex;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutNoiseIndex;                                     // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GPUNPCData_C_随机起始动画时间噪声贴图) == 0x000008, "Wrong alignment on GPUNPCData_C_随机起始动画时间噪声贴图");
static_assert(sizeof(GPUNPCData_C_随机起始动画时间噪声贴图) == 0x000020, "Wrong size on GPUNPCData_C_随机起始动画时间噪声贴图");
static_assert(offsetof(GPUNPCData_C_随机起始动画时间噪声贴图, OutNoiseTex) == 0x000000, "Member 'GPUNPCData_C_随机起始动画时间噪声贴图::OutNoiseTex' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_随机起始动画时间噪声贴图, OutNoiseIndex) == 0x000008, "Member 'GPUNPCData_C_随机起始动画时间噪声贴图::OutNoiseIndex' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_随机起始动画时间噪声贴图, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'GPUNPCData_C_随机起始动画时间噪声贴图::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_随机起始动画时间噪声贴图, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'GPUNPCData_C_随机起始动画时间噪声贴图::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_随机起始动画时间噪声贴图, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000014, "Member 'GPUNPCData_C_随机起始动画时间噪声贴图::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_随机起始动画时间噪声贴图, CallFunc_Array_Get_Item) == 0x000018, "Member 'GPUNPCData_C_随机起始动画时间噪声贴图::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GPUNPCData.GPUNPCData_C.生成MainMesh和SubMeshes
// 0x0038 (0x0038 - 0x0000)
struct GPUNPCData_C_生成MainMesh和SubMeshes final
{
public:
	class USkeletalMesh*                          OutMainMesh;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMesh*>                  OutSubMeshes;                                      // 0x0008(0x0010)(Parm, OutParm)
	class USkeletalMesh*                          CallFunc_GetMeshesFromNPCSetupData_OutMainMesh;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMesh*>                  CallFunc_GetMeshesFromNPCSetupData_OutSubMeshes;   // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_HasSetSkeletalMesh_HasSet;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GPUNPCData_C_生成MainMesh和SubMeshes) == 0x000008, "Wrong alignment on GPUNPCData_C_生成MainMesh和SubMeshes");
static_assert(sizeof(GPUNPCData_C_生成MainMesh和SubMeshes) == 0x000038, "Wrong size on GPUNPCData_C_生成MainMesh和SubMeshes");
static_assert(offsetof(GPUNPCData_C_生成MainMesh和SubMeshes, OutMainMesh) == 0x000000, "Member 'GPUNPCData_C_生成MainMesh和SubMeshes::OutMainMesh' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_生成MainMesh和SubMeshes, OutSubMeshes) == 0x000008, "Member 'GPUNPCData_C_生成MainMesh和SubMeshes::OutSubMeshes' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_生成MainMesh和SubMeshes, CallFunc_GetMeshesFromNPCSetupData_OutMainMesh) == 0x000018, "Member 'GPUNPCData_C_生成MainMesh和SubMeshes::CallFunc_GetMeshesFromNPCSetupData_OutMainMesh' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_生成MainMesh和SubMeshes, CallFunc_GetMeshesFromNPCSetupData_OutSubMeshes) == 0x000020, "Member 'GPUNPCData_C_生成MainMesh和SubMeshes::CallFunc_GetMeshesFromNPCSetupData_OutSubMeshes' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_生成MainMesh和SubMeshes, CallFunc_HasSetSkeletalMesh_HasSet) == 0x000030, "Member 'GPUNPCData_C_生成MainMesh和SubMeshes::CallFunc_HasSetSkeletalMesh_HasSet' has a wrong offset!");

// Function GPUNPCData.GPUNPCData_C.HasSetSkeletalMesh
// 0x0002 (0x0002 - 0x0000)
struct GPUNPCData_C_HasSetSkeletalMesh final
{
public:
	bool                                          HasSet;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GPUNPCData_C_HasSetSkeletalMesh) == 0x000001, "Wrong alignment on GPUNPCData_C_HasSetSkeletalMesh");
static_assert(sizeof(GPUNPCData_C_HasSetSkeletalMesh) == 0x000002, "Wrong size on GPUNPCData_C_HasSetSkeletalMesh");
static_assert(offsetof(GPUNPCData_C_HasSetSkeletalMesh, HasSet) == 0x000000, "Member 'GPUNPCData_C_HasSetSkeletalMesh::HasSet' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_HasSetSkeletalMesh, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000001, "Member 'GPUNPCData_C_HasSetSkeletalMesh::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function GPUNPCData.GPUNPCData_C.GetMeshesFromNPCSetupData
// 0x0028 (0x0028 - 0x0000)
struct GPUNPCData_C_GetMeshesFromNPCSetupData final
{
public:
	class USkeletalMesh*                          OutMainMesh;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMesh*>                  OutSubMeshes;                                      // 0x0008(0x0010)(Parm, OutParm)
	TArray<class USkeletalMesh*>                  SubMeshes;                                         // 0x0018(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(GPUNPCData_C_GetMeshesFromNPCSetupData) == 0x000008, "Wrong alignment on GPUNPCData_C_GetMeshesFromNPCSetupData");
static_assert(sizeof(GPUNPCData_C_GetMeshesFromNPCSetupData) == 0x000028, "Wrong size on GPUNPCData_C_GetMeshesFromNPCSetupData");
static_assert(offsetof(GPUNPCData_C_GetMeshesFromNPCSetupData, OutMainMesh) == 0x000000, "Member 'GPUNPCData_C_GetMeshesFromNPCSetupData::OutMainMesh' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetMeshesFromNPCSetupData, OutSubMeshes) == 0x000008, "Member 'GPUNPCData_C_GetMeshesFromNPCSetupData::OutSubMeshes' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetMeshesFromNPCSetupData, SubMeshes) == 0x000018, "Member 'GPUNPCData_C_GetMeshesFromNPCSetupData::SubMeshes' has a wrong offset!");

// Function GPUNPCData.GPUNPCData_C.GetMaxNumTracks
// 0x0028 (0x0028 - 0x0000)
struct GPUNPCData_C_GetMaxNumTracks final
{
public:
	int32                                         OutMaxNumTracks;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxNumTracks;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBakedBoneTexture2D*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GPUNPCData_C_GetMaxNumTracks) == 0x000008, "Wrong alignment on GPUNPCData_C_GetMaxNumTracks");
static_assert(sizeof(GPUNPCData_C_GetMaxNumTracks) == 0x000028, "Wrong size on GPUNPCData_C_GetMaxNumTracks");
static_assert(offsetof(GPUNPCData_C_GetMaxNumTracks, OutMaxNumTracks) == 0x000000, "Member 'GPUNPCData_C_GetMaxNumTracks::OutMaxNumTracks' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetMaxNumTracks, MaxNumTracks) == 0x000004, "Member 'GPUNPCData_C_GetMaxNumTracks::MaxNumTracks' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetMaxNumTracks, ___int_Array_Index_Variable) == 0x000008, "Member 'GPUNPCData_C_GetMaxNumTracks::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetMaxNumTracks, ___int_Loop_Counter_Variable) == 0x00000C, "Member 'GPUNPCData_C_GetMaxNumTracks::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetMaxNumTracks, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'GPUNPCData_C_GetMaxNumTracks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetMaxNumTracks, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'GPUNPCData_C_GetMaxNumTracks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetMaxNumTracks, CallFunc_Array_Get_Item) == 0x000018, "Member 'GPUNPCData_C_GetMaxNumTracks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetMaxNumTracks, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'GPUNPCData_C_GetMaxNumTracks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetMaxNumTracks, CallFunc_Max_ReturnValue) == 0x000024, "Member 'GPUNPCData_C_GetMaxNumTracks::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function GPUNPCData.GPUNPCData_C.GetTotalNumFrames
// 0x0028 (0x0028 - 0x0000)
struct GPUNPCData_C_GetTotalNumFrames final
{
public:
	int32                                         OutTotalNumFrames;                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalNumFrames;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBakedBoneTexture2D*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GPUNPCData_C_GetTotalNumFrames) == 0x000008, "Wrong alignment on GPUNPCData_C_GetTotalNumFrames");
static_assert(sizeof(GPUNPCData_C_GetTotalNumFrames) == 0x000028, "Wrong size on GPUNPCData_C_GetTotalNumFrames");
static_assert(offsetof(GPUNPCData_C_GetTotalNumFrames, OutTotalNumFrames) == 0x000000, "Member 'GPUNPCData_C_GetTotalNumFrames::OutTotalNumFrames' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetTotalNumFrames, TotalNumFrames) == 0x000004, "Member 'GPUNPCData_C_GetTotalNumFrames::TotalNumFrames' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetTotalNumFrames, ___int_Array_Index_Variable) == 0x000008, "Member 'GPUNPCData_C_GetTotalNumFrames::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetTotalNumFrames, ___int_Loop_Counter_Variable) == 0x00000C, "Member 'GPUNPCData_C_GetTotalNumFrames::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetTotalNumFrames, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'GPUNPCData_C_GetTotalNumFrames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetTotalNumFrames, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'GPUNPCData_C_GetTotalNumFrames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetTotalNumFrames, CallFunc_Array_Get_Item) == 0x000018, "Member 'GPUNPCData_C_GetTotalNumFrames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetTotalNumFrames, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'GPUNPCData_C_GetTotalNumFrames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_GetTotalNumFrames, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'GPUNPCData_C_GetTotalNumFrames::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function GPUNPCData.GPUNPCData_C.HasCombinedBakedBoneTexture
// 0x0002 (0x0002 - 0x0000)
struct GPUNPCData_C_HasCombinedBakedBoneTexture final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GPUNPCData_C_HasCombinedBakedBoneTexture) == 0x000001, "Wrong alignment on GPUNPCData_C_HasCombinedBakedBoneTexture");
static_assert(sizeof(GPUNPCData_C_HasCombinedBakedBoneTexture) == 0x000002, "Wrong size on GPUNPCData_C_HasCombinedBakedBoneTexture");
static_assert(offsetof(GPUNPCData_C_HasCombinedBakedBoneTexture, Result) == 0x000000, "Member 'GPUNPCData_C_HasCombinedBakedBoneTexture::Result' has a wrong offset!");
static_assert(offsetof(GPUNPCData_C_HasCombinedBakedBoneTexture, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000001, "Member 'GPUNPCData_C_HasCombinedBakedBoneTexture::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

