#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_EDarkNvzhuWing

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "KuroAnim_structs.hpp"
#include "KuroAnim_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_EDarkNvzhuWing.ABP_EDarkNvzhuWing_C
// 0x0AB0 (0x1200 - 0x0750)
class UABP_EDarkNvzhuWing_C final : public UKuroAnimInstance
{
public:
	uint8                                         Pad_748[0x8];                                      // 0x0748(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0750(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0758(0x0038)()
	struct FAnimNode_ExtraFollowAnims             AnimGraphNode_ExtraFollowAnims;                    // 0x0790(0x0A50)()
	bool                                          强化状态;                                          // 0x11E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E1[0x7];                                     // 0x11E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     当前角色;                                          // 0x11E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Attack04;                                          // 0x11F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          退出强化状态;                                      // 0x11F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Attack01;                                          // 0x11F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Attack02;                                          // 0x11F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Attack03;                                          // 0x11F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11F5[0x3];                                     // 0x11F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Wing_Show;                                         // 0x11F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_EDarkNvzhuWing(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void OnComponentStart();
	void BlueprintInitializeAnimation();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_EDarkNvzhuWing_C">();
	}
	static class UABP_EDarkNvzhuWing_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_EDarkNvzhuWing_C>();
	}
};
static_assert(alignof(UABP_EDarkNvzhuWing_C) == 0x000010, "Wrong alignment on UABP_EDarkNvzhuWing_C");
static_assert(sizeof(UABP_EDarkNvzhuWing_C) == 0x001200, "Wrong size on UABP_EDarkNvzhuWing_C");
static_assert(offsetof(UABP_EDarkNvzhuWing_C, UberGraphFrame) == 0x000750, "Member 'UABP_EDarkNvzhuWing_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_EDarkNvzhuWing_C, AnimGraphNode_Root) == 0x000758, "Member 'UABP_EDarkNvzhuWing_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_EDarkNvzhuWing_C, AnimGraphNode_ExtraFollowAnims) == 0x000790, "Member 'UABP_EDarkNvzhuWing_C::AnimGraphNode_ExtraFollowAnims' has a wrong offset!");
static_assert(offsetof(UABP_EDarkNvzhuWing_C, 强化状态) == 0x0011E0, "Member 'UABP_EDarkNvzhuWing_C::强化状态' has a wrong offset!");
static_assert(offsetof(UABP_EDarkNvzhuWing_C, 当前角色) == 0x0011E8, "Member 'UABP_EDarkNvzhuWing_C::当前角色' has a wrong offset!");
static_assert(offsetof(UABP_EDarkNvzhuWing_C, Attack04) == 0x0011F0, "Member 'UABP_EDarkNvzhuWing_C::Attack04' has a wrong offset!");
static_assert(offsetof(UABP_EDarkNvzhuWing_C, 退出强化状态) == 0x0011F1, "Member 'UABP_EDarkNvzhuWing_C::退出强化状态' has a wrong offset!");
static_assert(offsetof(UABP_EDarkNvzhuWing_C, Attack01) == 0x0011F2, "Member 'UABP_EDarkNvzhuWing_C::Attack01' has a wrong offset!");
static_assert(offsetof(UABP_EDarkNvzhuWing_C, Attack02) == 0x0011F3, "Member 'UABP_EDarkNvzhuWing_C::Attack02' has a wrong offset!");
static_assert(offsetof(UABP_EDarkNvzhuWing_C, Attack03) == 0x0011F4, "Member 'UABP_EDarkNvzhuWing_C::Attack03' has a wrong offset!");
static_assert(offsetof(UABP_EDarkNvzhuWing_C, Wing_Show) == 0x0011F8, "Member 'UABP_EDarkNvzhuWing_C::Wing_Show' has a wrong offset!");

}

