#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SA1Guyingxiongkai_ControlMonster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TsBaseCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SA1Guyingxiongkai_ControlMonster.BP_SA1Guyingxiongkai_ControlMonster_C
// 0x0010 (0x0760 - 0x0750)
class ABP_SA1Guyingxiongkai_ControlMonster_C final : public ATsBaseCharacter_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SA1Guyingxiongkai_ControlMonster_C; // 0x0750(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SA1Guyingxiongkai_EffectModel;                     // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SA1Guyingxiongkai_ControlMonster(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SA1Guyingxiongkai_ControlMonster_C">();
	}
	static class ABP_SA1Guyingxiongkai_ControlMonster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SA1Guyingxiongkai_ControlMonster_C>();
	}
};
static_assert(alignof(ABP_SA1Guyingxiongkai_ControlMonster_C) == 0x000010, "Wrong alignment on ABP_SA1Guyingxiongkai_ControlMonster_C");
static_assert(sizeof(ABP_SA1Guyingxiongkai_ControlMonster_C) == 0x000760, "Wrong size on ABP_SA1Guyingxiongkai_ControlMonster_C");
static_assert(offsetof(ABP_SA1Guyingxiongkai_ControlMonster_C, UberGraphFrame_BP_SA1Guyingxiongkai_ControlMonster_C) == 0x000750, "Member 'ABP_SA1Guyingxiongkai_ControlMonster_C::UberGraphFrame_BP_SA1Guyingxiongkai_ControlMonster_C' has a wrong offset!");
static_assert(offsetof(ABP_SA1Guyingxiongkai_ControlMonster_C, SA1Guyingxiongkai_EffectModel) == 0x000758, "Member 'ABP_SA1Guyingxiongkai_ControlMonster_C::SA1Guyingxiongkai_EffectModel' has a wrong offset!");

}

