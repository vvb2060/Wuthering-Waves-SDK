#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WindFieldInteraction

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WindFieldInteraction.BP_WindFieldInteraction_C
// 0x00A0 (0x0350 - 0x02B0)
class ABP_WindFieldInteraction_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          AreaBox;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_WindField;                                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FieldPosition;                                     // 0x02D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FieldLastPosition;                                 // 0x02DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FieldSize;                                         // 0x02E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Resolution;                                        // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x02F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isClear;                                           // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WeaponPosition;                                    // 0x0308(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastWeaponPosition;                                // 0x0314(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WeaponVelocity;                                    // 0x0320(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialParameterCollection*           Global_MPC;                                        // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           GlobalWorldPosition;                               // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeaponSpeed;                                       // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerSpeed;                                       // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void WeaponData();
	void UpdateParam(float dt);
	void ReceiveTick(float DeltaSeconds);
	void OnWeaponInteraction(const struct FVectorDouble& OriginPoint, class UBP_SceneBattleInteract_C* Config, int32 Id);
	void ExecuteUbergraph_BP_WindFieldInteraction(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WindFieldInteraction_C">();
	}
	static class ABP_WindFieldInteraction_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WindFieldInteraction_C>();
	}
};
static_assert(alignof(ABP_WindFieldInteraction_C) == 0x000008, "Wrong alignment on ABP_WindFieldInteraction_C");
static_assert(sizeof(ABP_WindFieldInteraction_C) == 0x000350, "Wrong size on ABP_WindFieldInteraction_C");
static_assert(offsetof(ABP_WindFieldInteraction_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_WindFieldInteraction_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, AreaBox) == 0x0002B8, "Member 'ABP_WindFieldInteraction_C::AreaBox' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, NS_WindField) == 0x0002C0, "Member 'ABP_WindFieldInteraction_C::NS_WindField' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_WindFieldInteraction_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, FieldPosition) == 0x0002D0, "Member 'ABP_WindFieldInteraction_C::FieldPosition' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, FieldLastPosition) == 0x0002DC, "Member 'ABP_WindFieldInteraction_C::FieldLastPosition' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, FieldSize) == 0x0002E8, "Member 'ABP_WindFieldInteraction_C::FieldSize' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, Resolution) == 0x0002F4, "Member 'ABP_WindFieldInteraction_C::Resolution' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, Offset) == 0x0002F8, "Member 'ABP_WindFieldInteraction_C::Offset' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, isClear) == 0x000304, "Member 'ABP_WindFieldInteraction_C::isClear' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, WeaponPosition) == 0x000308, "Member 'ABP_WindFieldInteraction_C::WeaponPosition' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, LastWeaponPosition) == 0x000314, "Member 'ABP_WindFieldInteraction_C::LastWeaponPosition' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, WeaponVelocity) == 0x000320, "Member 'ABP_WindFieldInteraction_C::WeaponVelocity' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, Global_MPC) == 0x000330, "Member 'ABP_WindFieldInteraction_C::Global_MPC' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, GlobalWorldPosition) == 0x000338, "Member 'ABP_WindFieldInteraction_C::GlobalWorldPosition' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, WeaponSpeed) == 0x000348, "Member 'ABP_WindFieldInteraction_C::WeaponSpeed' has a wrong offset!");
static_assert(offsetof(ABP_WindFieldInteraction_C, PlayerSpeed) == 0x00034C, "Member 'ABP_WindFieldInteraction_C::PlayerSpeed' has a wrong offset!");

}

