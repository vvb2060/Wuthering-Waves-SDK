#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WindFieldInteraction

#include "Basic.hpp"

#include "BP_WindFieldInteraction_classes.hpp"
#include "BP_WindFieldInteraction_parameters.hpp"


namespace SDK
{

// Function BP_WindFieldInteraction.BP_WindFieldInteraction_C.WeaponData
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WindFieldInteraction_C::WeaponData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindFieldInteraction_C", "WeaponData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WindFieldInteraction.BP_WindFieldInteraction_C.UpdateParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   dt                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WindFieldInteraction_C::UpdateParam(float dt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindFieldInteraction_C", "UpdateParam");

	Params::BP_WindFieldInteraction_C_UpdateParam Parms{};

	Parms.dt = dt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WindFieldInteraction.BP_WindFieldInteraction_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WindFieldInteraction_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindFieldInteraction_C", "ReceiveTick");

	Params::BP_WindFieldInteraction_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WindFieldInteraction.BP_WindFieldInteraction_C.OnWeaponInteraction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVectorDouble&             OriginPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_SceneBattleInteract_C*        Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Id                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WindFieldInteraction_C::OnWeaponInteraction(const struct FVectorDouble& OriginPoint, class UBP_SceneBattleInteract_C* Config, int32 Id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindFieldInteraction_C", "OnWeaponInteraction");

	Params::BP_WindFieldInteraction_C_OnWeaponInteraction Parms{};

	Parms.OriginPoint = std::move(OriginPoint);
	Parms.Config = Config;
	Parms.Id = Id;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WindFieldInteraction.BP_WindFieldInteraction_C.ExecuteUbergraph_BP_WindFieldInteraction
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WindFieldInteraction_C::ExecuteUbergraph_BP_WindFieldInteraction(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindFieldInteraction_C", "ExecuteUbergraph_BP_WindFieldInteraction");

	Params::BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

