#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MO1LeiXYLMd00301

#include "Basic.hpp"

#include "TsBaseCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MO1LeiXYLMd00301.BP_MO1LeiXYLMd00301_C
// 0x0020 (0x0770 - 0x0750)
class ABP_MO1LeiXYLMd00301_C final : public ATsBaseCharacter_C
{
public:
	class UKuroAdjustableBoxComponent*            Bone_Wing018;                                      // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKuroAdjustableBoxComponent*            Bone_Wing017;                                      // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKuroAdjustableCapsuleComponent*        Bip001Spine1;                                      // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKuroAdjustableCapsuleComponent*        Bip001Head;                                        // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MO1LeiXYLMd00301_C">();
	}
	static class ABP_MO1LeiXYLMd00301_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MO1LeiXYLMd00301_C>();
	}
};
static_assert(alignof(ABP_MO1LeiXYLMd00301_C) == 0x000010, "Wrong alignment on ABP_MO1LeiXYLMd00301_C");
static_assert(sizeof(ABP_MO1LeiXYLMd00301_C) == 0x000770, "Wrong size on ABP_MO1LeiXYLMd00301_C");
static_assert(offsetof(ABP_MO1LeiXYLMd00301_C, Bone_Wing018) == 0x000750, "Member 'ABP_MO1LeiXYLMd00301_C::Bone_Wing018' has a wrong offset!");
static_assert(offsetof(ABP_MO1LeiXYLMd00301_C, Bone_Wing017) == 0x000758, "Member 'ABP_MO1LeiXYLMd00301_C::Bone_Wing017' has a wrong offset!");
static_assert(offsetof(ABP_MO1LeiXYLMd00301_C, Bip001Spine1) == 0x000760, "Member 'ABP_MO1LeiXYLMd00301_C::Bip001Spine1' has a wrong offset!");
static_assert(offsetof(ABP_MO1LeiXYLMd00301_C, Bip001Head) == 0x000768, "Member 'ABP_MO1LeiXYLMd00301_C::Bip001Head' has a wrong offset!");

}

