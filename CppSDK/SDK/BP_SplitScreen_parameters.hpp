#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplitScreen

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SplitScreen.BP_SplitScreen_C.ExecuteUbergraph_BP_SplitScreen
// 0x0070 (0x0070 - 0x0000)
struct BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_1;    // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_2;    // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseRole_Seq_V2_C*                  K2Node_DynamicCast_AsBP_Base_Role_Seq_V2;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseRole_Seq_V2_C*                  K2Node_DynamicCast_AsBP_Base_Role_Seq_V2_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseRole_Seq_V2_C*                  K2Node_DynamicCast_AsBP_Base_Role_Seq_V2_2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue_2;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen) == 0x000008, "Wrong alignment on BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen");
static_assert(sizeof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen) == 0x000070, "Wrong size on BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, EntryPoint) == 0x000000, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, CallFunc_GetValidValue_ReturnValue) == 0x000004, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, CallFunc_GetVectorParameterValue_ReturnValue) == 0x00000C, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, CallFunc_GetVectorParameterValue_ReturnValue_1) == 0x00001C, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::CallFunc_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, CallFunc_GetVectorParameterValue_ReturnValue_2) == 0x00002C, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::CallFunc_GetVectorParameterValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, K2Node_DynamicCast_AsBP_Base_Role_Seq_V2) == 0x000040, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::K2Node_DynamicCast_AsBP_Base_Role_Seq_V2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, K2Node_DynamicCast_AsBP_Base_Role_Seq_V2_1) == 0x000050, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::K2Node_DynamicCast_AsBP_Base_Role_Seq_V2_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, CallFunc_GetValidValue_ReturnValue_1) == 0x000059, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, K2Node_DynamicCast_AsBP_Base_Role_Seq_V2_2) == 0x000060, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::K2Node_DynamicCast_AsBP_Base_Role_Seq_V2_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, CallFunc_IsValid_ReturnValue_1) == 0x00006A, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, CallFunc_IsValid_ReturnValue_2) == 0x00006B, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen, CallFunc_GetValidValue_ReturnValue_2) == 0x00006C, "Member 'BP_SplitScreen_C_ExecuteUbergraph_BP_SplitScreen::CallFunc_GetValidValue_ReturnValue_2' has a wrong offset!");

// Function BP_SplitScreen.BP_SplitScreen_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SplitScreen_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplitScreen_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SplitScreen_C_ReceiveTick");
static_assert(sizeof(BP_SplitScreen_C_ReceiveTick) == 0x000004, "Wrong size on BP_SplitScreen_C_ReceiveTick");
static_assert(offsetof(BP_SplitScreen_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SplitScreen_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SplitScreen.BP_SplitScreen_C.Start
// 0x0028 (0x0028 - 0x0000)
struct BP_SplitScreen_C_Start final
{
public:
	class UKuroMaterialControllerComponent*       CallFunc_AddComponentByClass_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKuroMaterialControllerComponent*       CallFunc_AddComponentByClass_ReturnValue_1;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKuroMaterialControllerComponent*       CallFunc_AddComponentByClass_ReturnValue_2;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InitKuroMaterialController_returnHandle;  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InitKuroMaterialController_returnHandle_1; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InitKuroMaterialController_returnHandle_2; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplitScreen_C_Start) == 0x000008, "Wrong alignment on BP_SplitScreen_C_Start");
static_assert(sizeof(BP_SplitScreen_C_Start) == 0x000028, "Wrong size on BP_SplitScreen_C_Start");
static_assert(offsetof(BP_SplitScreen_C_Start, CallFunc_AddComponentByClass_ReturnValue) == 0x000000, "Member 'BP_SplitScreen_C_Start::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_Start, CallFunc_AddComponentByClass_ReturnValue_1) == 0x000008, "Member 'BP_SplitScreen_C_Start::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_Start, CallFunc_AddComponentByClass_ReturnValue_2) == 0x000010, "Member 'BP_SplitScreen_C_Start::CallFunc_AddComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_Start, CallFunc_InitKuroMaterialController_returnHandle) == 0x000018, "Member 'BP_SplitScreen_C_Start::CallFunc_InitKuroMaterialController_returnHandle' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_Start, CallFunc_InitKuroMaterialController_returnHandle_1) == 0x00001C, "Member 'BP_SplitScreen_C_Start::CallFunc_InitKuroMaterialController_returnHandle_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_Start, CallFunc_InitKuroMaterialController_returnHandle_2) == 0x000020, "Member 'BP_SplitScreen_C_Start::CallFunc_InitKuroMaterialController_returnHandle_2' has a wrong offset!");

// Function BP_SplitScreen.BP_SplitScreen_C.InitKuroMaterialController
// 0x0140 (0x0140 - 0x0000)
struct BP_SplitScreen_C_InitKuroMaterialController final
{
public:
	class UKuroMaterialControllerComponent*       KuroMaterialControllerComponent;                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CharacterActorComponent;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLightComponent;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PointLight_Location;                               // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PointLight_ToonLightColor;                         // 0x0024(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EyeLightSimulation_TongKong;                       // 0x0034(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EyeLightSimulation_YanBai;                         // 0x0044(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EyeLightSimulation_Color;                          // 0x0054(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         E_LinkPos;                                         // 0x0064(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Channel0;                                          // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Channel1;                                          // 0x0069(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Channel2;                                          // 0x006A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         returnHandle;                                      // 0x006C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalHandle;                                       // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0074(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseRole_Seq_V2_C*                  K2Node_DynamicCast_AsBP_Base_Role_Seq_V2;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddEffect_ReturnValue;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseRole_Seq_V2_C*                  K2Node_DynamicCast_AsBP_Base_Role_Seq_V2_1;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B[0x1];                                      // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplitScreen_C_InitKuroMaterialController) == 0x000008, "Wrong alignment on BP_SplitScreen_C_InitKuroMaterialController");
static_assert(sizeof(BP_SplitScreen_C_InitKuroMaterialController) == 0x000140, "Wrong size on BP_SplitScreen_C_InitKuroMaterialController");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, KuroMaterialControllerComponent) == 0x000000, "Member 'BP_SplitScreen_C_InitKuroMaterialController::KuroMaterialControllerComponent' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, CharacterActorComponent) == 0x000008, "Member 'BP_SplitScreen_C_InitKuroMaterialController::CharacterActorComponent' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, PointLightComponent) == 0x000010, "Member 'BP_SplitScreen_C_InitKuroMaterialController::PointLightComponent' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, PointLight_Location) == 0x000018, "Member 'BP_SplitScreen_C_InitKuroMaterialController::PointLight_Location' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, PointLight_ToonLightColor) == 0x000024, "Member 'BP_SplitScreen_C_InitKuroMaterialController::PointLight_ToonLightColor' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, EyeLightSimulation_TongKong) == 0x000034, "Member 'BP_SplitScreen_C_InitKuroMaterialController::EyeLightSimulation_TongKong' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, EyeLightSimulation_YanBai) == 0x000044, "Member 'BP_SplitScreen_C_InitKuroMaterialController::EyeLightSimulation_YanBai' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, EyeLightSimulation_Color) == 0x000054, "Member 'BP_SplitScreen_C_InitKuroMaterialController::EyeLightSimulation_Color' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, E_LinkPos) == 0x000064, "Member 'BP_SplitScreen_C_InitKuroMaterialController::E_LinkPos' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, Channel0) == 0x000068, "Member 'BP_SplitScreen_C_InitKuroMaterialController::Channel0' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, Channel1) == 0x000069, "Member 'BP_SplitScreen_C_InitKuroMaterialController::Channel1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, Channel2) == 0x00006A, "Member 'BP_SplitScreen_C_InitKuroMaterialController::Channel2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, returnHandle) == 0x00006C, "Member 'BP_SplitScreen_C_InitKuroMaterialController::returnHandle' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, LocalHandle) == 0x000070, "Member 'BP_SplitScreen_C_InitKuroMaterialController::LocalHandle' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000074, "Member 'BP_SplitScreen_C_InitKuroMaterialController::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BP_SplitScreen_C_InitKuroMaterialController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, K2Node_DynamicCast_AsBP_Base_Role_Seq_V2) == 0x000110, "Member 'BP_SplitScreen_C_InitKuroMaterialController::K2Node_DynamicCast_AsBP_Base_Role_Seq_V2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BP_SplitScreen_C_InitKuroMaterialController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, CallFunc_IsValid_ReturnValue_1) == 0x000119, "Member 'BP_SplitScreen_C_InitKuroMaterialController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, CallFunc_AddEffect_ReturnValue) == 0x00011C, "Member 'BP_SplitScreen_C_InitKuroMaterialController::CallFunc_AddEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, K2Node_DynamicCast_AsBP_Base_Role_Seq_V2_1) == 0x000120, "Member 'BP_SplitScreen_C_InitKuroMaterialController::K2Node_DynamicCast_AsBP_Base_Role_Seq_V2_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'BP_SplitScreen_C_InitKuroMaterialController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, CallFunc_GetValidValue_ReturnValue) == 0x000129, "Member 'BP_SplitScreen_C_InitKuroMaterialController::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, CallFunc_GetValidValue_ReturnValue_1) == 0x00012A, "Member 'BP_SplitScreen_C_InitKuroMaterialController::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_C_InitKuroMaterialController, CallFunc_GetVectorParameterValue_ReturnValue) == 0x00012C, "Member 'BP_SplitScreen_C_InitKuroMaterialController::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");

}

