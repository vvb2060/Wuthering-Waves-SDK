#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BaseRole_Seq_V2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_BaseRole_Seq_V2.ABP_BaseRole_Seq_V2_C.修型层
// 0x0020 (0x0020 - 0x0000)
struct ABP_BaseRole_Seq_V2_C_修型层 final
{
public:
	struct FPoseLink                              InPose_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              修型层_0;                                          // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_BaseRole_Seq_V2_C_修型层) == 0x000008, "Wrong alignment on ABP_BaseRole_Seq_V2_C_修型层");
static_assert(sizeof(ABP_BaseRole_Seq_V2_C_修型层) == 0x000020, "Wrong size on ABP_BaseRole_Seq_V2_C_修型层");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_修型层, InPose_0) == 0x000000, "Member 'ABP_BaseRole_Seq_V2_C_修型层::InPose_0' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_修型层, 修型层_0) == 0x000010, "Member 'ABP_BaseRole_Seq_V2_C_修型层::修型层_0' has a wrong offset!");

// Function ABP_BaseRole_Seq_V2.ABP_BaseRole_Seq_V2_C.面部层
// 0x0020 (0x0020 - 0x0000)
struct ABP_BaseRole_Seq_V2_C_面部层 final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              面部层_0;                                          // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_BaseRole_Seq_V2_C_面部层) == 0x000008, "Wrong alignment on ABP_BaseRole_Seq_V2_C_面部层");
static_assert(sizeof(ABP_BaseRole_Seq_V2_C_面部层) == 0x000020, "Wrong size on ABP_BaseRole_Seq_V2_C_面部层");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_面部层, InPose) == 0x000000, "Member 'ABP_BaseRole_Seq_V2_C_面部层::InPose' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_面部层, 面部层_0) == 0x000010, "Member 'ABP_BaseRole_Seq_V2_C_面部层::面部层_0' has a wrong offset!");

// Function ABP_BaseRole_Seq_V2.ABP_BaseRole_Seq_V2_C.肢体层
// 0x0010 (0x0010 - 0x0000)
struct ABP_BaseRole_Seq_V2_C_肢体层 final
{
public:
	struct FPoseLink                              肢体层_0;                                          // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_BaseRole_Seq_V2_C_肢体层) == 0x000008, "Wrong alignment on ABP_BaseRole_Seq_V2_C_肢体层");
static_assert(sizeof(ABP_BaseRole_Seq_V2_C_肢体层) == 0x000010, "Wrong size on ABP_BaseRole_Seq_V2_C_肢体层");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_肢体层, 肢体层_0) == 0x000000, "Member 'ABP_BaseRole_Seq_V2_C_肢体层::肢体层_0' has a wrong offset!");

// Function ABP_BaseRole_Seq_V2.ABP_BaseRole_Seq_V2_C.计算层
// 0x0020 (0x0020 - 0x0000)
struct ABP_BaseRole_Seq_V2_C_计算层 final
{
public:
	struct FPoseLink                              InPose_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              计算层_0;                                          // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_BaseRole_Seq_V2_C_计算层) == 0x000008, "Wrong alignment on ABP_BaseRole_Seq_V2_C_计算层");
static_assert(sizeof(ABP_BaseRole_Seq_V2_C_计算层) == 0x000020, "Wrong size on ABP_BaseRole_Seq_V2_C_计算层");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_计算层, InPose_0) == 0x000000, "Member 'ABP_BaseRole_Seq_V2_C_计算层::InPose_0' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_计算层, 计算层_0) == 0x000010, "Member 'ABP_BaseRole_Seq_V2_C_计算层::计算层_0' has a wrong offset!");

// Function ABP_BaseRole_Seq_V2.ABP_BaseRole_Seq_V2_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_BaseRole_Seq_V2_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_BaseRole_Seq_V2_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_BaseRole_Seq_V2_C_AnimGraph");
static_assert(sizeof(ABP_BaseRole_Seq_V2_C_AnimGraph) == 0x000010, "Wrong size on ABP_BaseRole_Seq_V2_C_AnimGraph");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_BaseRole_Seq_V2_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_BaseRole_Seq_V2.ABP_BaseRole_Seq_V2_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_BaseRole_Seq_V2_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_BaseRole_Seq_V2_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_BaseRole_Seq_V2_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_BaseRole_Seq_V2_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_BaseRole_Seq_V2_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_BaseRole_Seq_V2_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_BaseRole_Seq_V2.ABP_BaseRole_Seq_V2_C.ExecuteUbergraph_ABP_BaseRole_Seq_V2
// 0x0050 (0x0050 - 0x0000)
struct ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IABPC_Seq_Interface_C> K2Node_DynamicCast_AsABPC_Seq_Interface;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABPC_Seq_Body_V2_C*                    CallFunc_GetABPC_Body_V2_ABPC_Body_V2;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2) == 0x000008, "Wrong alignment on ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2");
static_assert(sizeof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2) == 0x000050, "Wrong size on ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2, EntryPoint) == 0x000000, "Member 'ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2, K2Node_DynamicCast_AsABPC_Seq_Interface) == 0x000010, "Member 'ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2::K2Node_DynamicCast_AsABPC_Seq_Interface' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2, K2Node_Event_DeltaTimeX) == 0x000024, "Member 'ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2, CallFunc_GetABPC_Body_V2_ABPC_Body_V2) == 0x000028, "Member 'ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2::CallFunc_GetABPC_Body_V2_ABPC_Body_V2' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2, CallFunc_MakeVector2D_ReturnValue) == 0x000044, "Member 'ABP_BaseRole_Seq_V2_C_ExecuteUbergraph_ABP_BaseRole_Seq_V2::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

