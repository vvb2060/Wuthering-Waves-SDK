#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WindFieldInteraction

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_WindFieldInteraction.BP_WindFieldInteraction_C.WeaponData
// 0x0048 (0x0048 - 0x0000)
struct BP_WindFieldInteraction_C_WeaponData final
{
public:
	struct FVector                                tempVel;                                           // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WindFieldInteraction_C_WeaponData) == 0x000004, "Wrong alignment on BP_WindFieldInteraction_C_WeaponData");
static_assert(sizeof(BP_WindFieldInteraction_C_WeaponData) == 0x000048, "Wrong size on BP_WindFieldInteraction_C_WeaponData");
static_assert(offsetof(BP_WindFieldInteraction_C_WeaponData, tempVel) == 0x000000, "Member 'BP_WindFieldInteraction_C_WeaponData::tempVel' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_WeaponData, CallFunc_MakeLiteralName_ReturnValue) == 0x00000C, "Member 'BP_WindFieldInteraction_C_WeaponData::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_WeaponData, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000018, "Member 'BP_WindFieldInteraction_C_WeaponData::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_WeaponData, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'BP_WindFieldInteraction_C_WeaponData::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_WeaponData, CallFunc_VSize_ReturnValue) == 0x000034, "Member 'BP_WindFieldInteraction_C_WeaponData::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_WeaponData, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'BP_WindFieldInteraction_C_WeaponData::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_WeaponData, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_WindFieldInteraction_C_WeaponData::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_WeaponData, CallFunc_Less_FloatFloat_ReturnValue) == 0x000045, "Member 'BP_WindFieldInteraction_C_WeaponData::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_WeaponData, CallFunc_BooleanAND_ReturnValue) == 0x000046, "Member 'BP_WindFieldInteraction_C_WeaponData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_WindFieldInteraction.BP_WindFieldInteraction_C.UpdateParam
// 0x00F0 (0x00F0 - 0x0000)
struct BP_WindFieldInteraction_C_UpdateParam final
{
public:
	float                                         dt;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_GetVelocity_ReturnValue;                // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorDoubleToLinearColor_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             CallFunc_GetWorldOriginLocation_ReturnValue;       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntVectorToVector_ReturnValue;       // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraParameterCollectionInstance*    CallFunc_GetNiagaraParameterCollection_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WindFieldInteraction_C_UpdateParam) == 0x000008, "Wrong alignment on BP_WindFieldInteraction_C_UpdateParam");
static_assert(sizeof(BP_WindFieldInteraction_C_UpdateParam) == 0x0000F0, "Wrong size on BP_WindFieldInteraction_C_UpdateParam");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, dt) == 0x000000, "Member 'BP_WindFieldInteraction_C_UpdateParam::dt' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_D_GetVelocity_ReturnValue) == 0x000010, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_D_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000028, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_Conv_VectorDoubleToLinearColor_ReturnValue) == 0x000038, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_Conv_VectorDoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_GetWorldOriginLocation_ReturnValue) == 0x000048, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_GetWorldOriginLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000054, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_Conv_IntVectorToVector_ReturnValue) == 0x000064, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_Conv_IntVectorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000070, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x0000A0, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x0000B0, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_GetNiagaraParameterCollection_ReturnValue) == 0x0000C0, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_GetNiagaraParameterCollection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000C8, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x0000CC, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x0000E0, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_UpdateParam, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_WindFieldInteraction_C_UpdateParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_WindFieldInteraction.BP_WindFieldInteraction_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_WindFieldInteraction_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WindFieldInteraction_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_WindFieldInteraction_C_ReceiveTick");
static_assert(sizeof(BP_WindFieldInteraction_C_ReceiveTick) == 0x000004, "Wrong size on BP_WindFieldInteraction_C_ReceiveTick");
static_assert(offsetof(BP_WindFieldInteraction_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_WindFieldInteraction_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_WindFieldInteraction.BP_WindFieldInteraction_C.OnWeaponInteraction
// 0x0028 (0x0028 - 0x0000)
struct BP_WindFieldInteraction_C_OnWeaponInteraction final
{
public:
	struct FVectorDouble                          OriginPoint;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneBattleInteract_C*              Config;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Id;                                                // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WindFieldInteraction_C_OnWeaponInteraction) == 0x000008, "Wrong alignment on BP_WindFieldInteraction_C_OnWeaponInteraction");
static_assert(sizeof(BP_WindFieldInteraction_C_OnWeaponInteraction) == 0x000028, "Wrong size on BP_WindFieldInteraction_C_OnWeaponInteraction");
static_assert(offsetof(BP_WindFieldInteraction_C_OnWeaponInteraction, OriginPoint) == 0x000000, "Member 'BP_WindFieldInteraction_C_OnWeaponInteraction::OriginPoint' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_OnWeaponInteraction, Config) == 0x000018, "Member 'BP_WindFieldInteraction_C_OnWeaponInteraction::Config' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_OnWeaponInteraction, Id) == 0x000020, "Member 'BP_WindFieldInteraction_C_OnWeaponInteraction::Id' has a wrong offset!");

// Function BP_WindFieldInteraction.BP_WindFieldInteraction_C.ExecuteUbergraph_BP_WindFieldInteraction
// 0x0080 (0x0080 - 0x0000)
struct BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FVectorDouble& OriginPoint, class UBP_SceneBattleInteract_C* Config, int32 Id)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0028)(ZeroConstructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetBpEventManager_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventManager_C*                     K2Node_DynamicCast_AsBP_Event_Manager;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          K2Node_CustomEvent_OriginPoint;                    // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneBattleInteract_C*              K2Node_CustomEvent_Config;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Id;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction) == 0x000008, "Wrong alignment on BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction");
static_assert(sizeof(BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction) == 0x000080, "Wrong size on BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction");
static_assert(offsetof(BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction, EntryPoint) == 0x000000, "Member 'BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction, CallFunc_GetBpEventManager_ReturnValue) == 0x000038, "Member 'BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction::CallFunc_GetBpEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction, K2Node_DynamicCast_AsBP_Event_Manager) == 0x000040, "Member 'BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction::K2Node_DynamicCast_AsBP_Event_Manager' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction, K2Node_CustomEvent_OriginPoint) == 0x000050, "Member 'BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction::K2Node_CustomEvent_OriginPoint' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction, K2Node_CustomEvent_Config) == 0x000068, "Member 'BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction::K2Node_CustomEvent_Config' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction, K2Node_CustomEvent_Id) == 0x000070, "Member 'BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction::K2Node_CustomEvent_Id' has a wrong offset!");
static_assert(offsetof(BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x000074, "Member 'BP_WindFieldInteraction_C_ExecuteUbergraph_BP_WindFieldInteraction::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");

}

