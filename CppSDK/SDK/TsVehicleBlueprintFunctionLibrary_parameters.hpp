#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsVehicleBlueprintFunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TsVehicleBlueprintFunctionLibrary.TsVehicleBlueprintFunctionLibrary_C.GetVehicleRotiationSpeed
// 0x0018 (0x0018 - 0x0000)
struct TsVehicleBlueprintFunctionLibrary_C_GetVehicleRotiationSpeed final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsVehicleBlueprintFunctionLibrary_C_GetVehicleRotiationSpeed) == 0x000008, "Wrong alignment on TsVehicleBlueprintFunctionLibrary_C_GetVehicleRotiationSpeed");
static_assert(sizeof(TsVehicleBlueprintFunctionLibrary_C_GetVehicleRotiationSpeed) == 0x000018, "Wrong size on TsVehicleBlueprintFunctionLibrary_C_GetVehicleRotiationSpeed");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetVehicleRotiationSpeed, entityId) == 0x000000, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetVehicleRotiationSpeed::entityId' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetVehicleRotiationSpeed, __WorldContext) == 0x000008, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetVehicleRotiationSpeed::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetVehicleRotiationSpeed, ReturnValue) == 0x000010, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetVehicleRotiationSpeed::ReturnValue' has a wrong offset!");

// Function TsVehicleBlueprintFunctionLibrary.TsVehicleBlueprintFunctionLibrary_C.GetVehicleVelocity
// 0x0020 (0x0020 - 0x0000)
struct TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                outVelocity;                                       // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity) == 0x000008, "Wrong alignment on TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity");
static_assert(sizeof(TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity) == 0x000020, "Wrong size on TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity, entityId) == 0x000000, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity::entityId' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity, outVelocity) == 0x000004, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity::outVelocity' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity, __WorldContext) == 0x000010, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity, ReturnValue) == 0x000018, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetVehicleVelocity::ReturnValue' has a wrong offset!");

// Function TsVehicleBlueprintFunctionLibrary.TsVehicleBlueprintFunctionLibrary_C.GetDrivedVehicleRotiationSpeed
// 0x0018 (0x0018 - 0x0000)
struct TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleRotiationSpeed final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleRotiationSpeed) == 0x000008, "Wrong alignment on TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleRotiationSpeed");
static_assert(sizeof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleRotiationSpeed) == 0x000018, "Wrong size on TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleRotiationSpeed");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleRotiationSpeed, entityId) == 0x000000, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleRotiationSpeed::entityId' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleRotiationSpeed, __WorldContext) == 0x000008, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleRotiationSpeed::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleRotiationSpeed, ReturnValue) == 0x000010, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleRotiationSpeed::ReturnValue' has a wrong offset!");

// Function TsVehicleBlueprintFunctionLibrary.TsVehicleBlueprintFunctionLibrary_C.GetDrivedVehicleVelocity
// 0x0020 (0x0020 - 0x0000)
struct TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                outVelocity;                                       // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity) == 0x000008, "Wrong alignment on TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity");
static_assert(sizeof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity) == 0x000020, "Wrong size on TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity, entityId) == 0x000000, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity::entityId' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity, outVelocity) == 0x000004, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity::outVelocity' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity, __WorldContext) == 0x000010, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity, ReturnValue) == 0x000018, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleVelocity::ReturnValue' has a wrong offset!");

// Function TsVehicleBlueprintFunctionLibrary.TsVehicleBlueprintFunctionLibrary_C.ConvertAngleToPassengerSpace
// 0x0018 (0x0018 - 0x0000)
struct TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         yawInVehicleCoordinate;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace) == 0x000008, "Wrong alignment on TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace");
static_assert(sizeof(TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace) == 0x000018, "Wrong size on TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace, entityId) == 0x000000, "Member 'TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace::entityId' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace, yawInVehicleCoordinate) == 0x000004, "Member 'TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace::yawInVehicleCoordinate' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace, __WorldContext) == 0x000008, "Member 'TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace, ReturnValue) == 0x000010, "Member 'TsVehicleBlueprintFunctionLibrary_C_ConvertAngleToPassengerSpace::ReturnValue' has a wrong offset!");

// Function TsVehicleBlueprintFunctionLibrary.TsVehicleBlueprintFunctionLibrary_C.GetDrivedVehicleSeatRot
// 0x0020 (0x0020 - 0x0000)
struct TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               outRot;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot) == 0x000008, "Wrong alignment on TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot");
static_assert(sizeof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot) == 0x000020, "Wrong size on TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot, entityId) == 0x000000, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot::entityId' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot, outRot) == 0x000004, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot::outRot' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot, __WorldContext) == 0x000010, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot, ReturnValue) == 0x000018, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetDrivedVehicleSeatRot::ReturnValue' has a wrong offset!");

// Function TsVehicleBlueprintFunctionLibrary.TsVehicleBlueprintFunctionLibrary_C.UpdateDrivedVehiclePerformData
// 0x0018 (0x0018 - 0x0000)
struct TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isImpacted;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         direction;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         strength;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData) == 0x000008, "Wrong alignment on TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData");
static_assert(sizeof(TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData) == 0x000018, "Wrong size on TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData, entityId) == 0x000000, "Member 'TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData::entityId' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData, isImpacted) == 0x000004, "Member 'TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData::isImpacted' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData, direction) == 0x000008, "Member 'TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData::direction' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData, strength) == 0x00000C, "Member 'TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData::strength' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData, __WorldContext) == 0x000010, "Member 'TsVehicleBlueprintFunctionLibrary_C_UpdateDrivedVehiclePerformData::__WorldContext' has a wrong offset!");

// Function TsVehicleBlueprintFunctionLibrary.TsVehicleBlueprintFunctionLibrary_C.GetAndResetEnterSprint
// 0x0018 (0x0018 - 0x0000)
struct TsVehicleBlueprintFunctionLibrary_C_GetAndResetEnterSprint final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsVehicleBlueprintFunctionLibrary_C_GetAndResetEnterSprint) == 0x000008, "Wrong alignment on TsVehicleBlueprintFunctionLibrary_C_GetAndResetEnterSprint");
static_assert(sizeof(TsVehicleBlueprintFunctionLibrary_C_GetAndResetEnterSprint) == 0x000018, "Wrong size on TsVehicleBlueprintFunctionLibrary_C_GetAndResetEnterSprint");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetAndResetEnterSprint, entityId) == 0x000000, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetAndResetEnterSprint::entityId' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetAndResetEnterSprint, __WorldContext) == 0x000008, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetAndResetEnterSprint::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_GetAndResetEnterSprint, ReturnValue) == 0x000010, "Member 'TsVehicleBlueprintFunctionLibrary_C_GetAndResetEnterSprint::ReturnValue' has a wrong offset!");

// Function TsVehicleBlueprintFunctionLibrary.TsVehicleBlueprintFunctionLibrary_C.UpdateAnimInfo
// 0x0010 (0x0010 - 0x0000)
struct TsVehicleBlueprintFunctionLibrary_C_UpdateAnimInfo final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsVehicleBlueprintFunctionLibrary_C_UpdateAnimInfo) == 0x000008, "Wrong alignment on TsVehicleBlueprintFunctionLibrary_C_UpdateAnimInfo");
static_assert(sizeof(TsVehicleBlueprintFunctionLibrary_C_UpdateAnimInfo) == 0x000010, "Wrong size on TsVehicleBlueprintFunctionLibrary_C_UpdateAnimInfo");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_UpdateAnimInfo, entityId) == 0x000000, "Member 'TsVehicleBlueprintFunctionLibrary_C_UpdateAnimInfo::entityId' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_UpdateAnimInfo, __WorldContext) == 0x000008, "Member 'TsVehicleBlueprintFunctionLibrary_C_UpdateAnimInfo::__WorldContext' has a wrong offset!");

// Function TsVehicleBlueprintFunctionLibrary.TsVehicleBlueprintFunctionLibrary_C.UpdateVehiclePerformData
// 0x0018 (0x0018 - 0x0000)
struct TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isImpacted;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         direction;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         strength;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData) == 0x000008, "Wrong alignment on TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData");
static_assert(sizeof(TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData) == 0x000018, "Wrong size on TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData, entityId) == 0x000000, "Member 'TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData::entityId' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData, isImpacted) == 0x000004, "Member 'TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData::isImpacted' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData, direction) == 0x000008, "Member 'TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData::direction' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData, strength) == 0x00000C, "Member 'TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData::strength' has a wrong offset!");
static_assert(offsetof(TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData, __WorldContext) == 0x000010, "Member 'TsVehicleBlueprintFunctionLibrary_C_UpdateVehiclePerformData::__WorldContext' has a wrong offset!");

}

