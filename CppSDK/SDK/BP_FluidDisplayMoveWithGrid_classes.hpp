#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluidDisplayMoveWithGrid

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "QuantizerMode_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FluidDisplayMoveWithGrid.BP_FluidDisplayMoveWithGrid_C
// 0x0040 (0x02F0 - 0x02B0)
class ABP_FluidDisplayMoveWithGrid_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANinjaLive_C*                           TargetNinjaLive;                                   // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseGridFollow;                                    // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDisable;                                          // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x2];                                      // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ValidDistance;                                     // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          rawPosition;                                       // 0x02D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BP_FluidDisplayMoveWithGrid(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FluidDisplayMoveWithGrid_C">();
	}
	static class ABP_FluidDisplayMoveWithGrid_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FluidDisplayMoveWithGrid_C>();
	}
};
static_assert(alignof(ABP_FluidDisplayMoveWithGrid_C) == 0x000008, "Wrong alignment on ABP_FluidDisplayMoveWithGrid_C");
static_assert(sizeof(ABP_FluidDisplayMoveWithGrid_C) == 0x0002F0, "Wrong size on ABP_FluidDisplayMoveWithGrid_C");
static_assert(offsetof(ABP_FluidDisplayMoveWithGrid_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_FluidDisplayMoveWithGrid_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FluidDisplayMoveWithGrid_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_FluidDisplayMoveWithGrid_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FluidDisplayMoveWithGrid_C, TargetActor) == 0x0002C0, "Member 'ABP_FluidDisplayMoveWithGrid_C::TargetActor' has a wrong offset!");
static_assert(offsetof(ABP_FluidDisplayMoveWithGrid_C, TargetNinjaLive) == 0x0002C8, "Member 'ABP_FluidDisplayMoveWithGrid_C::TargetNinjaLive' has a wrong offset!");
static_assert(offsetof(ABP_FluidDisplayMoveWithGrid_C, bUseGridFollow) == 0x0002D0, "Member 'ABP_FluidDisplayMoveWithGrid_C::bUseGridFollow' has a wrong offset!");
static_assert(offsetof(ABP_FluidDisplayMoveWithGrid_C, bDisable) == 0x0002D1, "Member 'ABP_FluidDisplayMoveWithGrid_C::bDisable' has a wrong offset!");
static_assert(offsetof(ABP_FluidDisplayMoveWithGrid_C, ValidDistance) == 0x0002D4, "Member 'ABP_FluidDisplayMoveWithGrid_C::ValidDistance' has a wrong offset!");
static_assert(offsetof(ABP_FluidDisplayMoveWithGrid_C, rawPosition) == 0x0002D8, "Member 'ABP_FluidDisplayMoveWithGrid_C::rawPosition' has a wrong offset!");

}

