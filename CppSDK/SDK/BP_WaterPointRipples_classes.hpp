#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WaterPointRipples

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WaterPointRipples.BP_WaterPointRipples_C
// 0x0088 (0x0338 - 0x02B0)
class ABP_WaterPointRipples_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RippleIndex;                                       // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           RipplePos;                                         // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class AActor*>                         Gen_Rippe_Actor;                                   // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<double>                                AD_Dist;                                           // 0x02E8(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         AA_Actor;                                          // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	float                                         F_Timer;                                           // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              E_GenWaterPointRipple;                             // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              E_DelWaterPointRipple;                             // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          EvenNumber;                                        // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();
	void ReceiveTick(float DeltaSeconds);
	void E_GenWaterPointRipple_Event(class ABP_GenWaterPointRipple_C* RipplePoint);
	void E_DelWaterPointRipple_Event(class ABP_GenWaterPointRipple_C* RipplePoint);
	void ExecuteUbergraph_BP_WaterPointRipples(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WaterPointRipples_C">();
	}
	static class ABP_WaterPointRipples_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WaterPointRipples_C>();
	}
};
static_assert(alignof(ABP_WaterPointRipples_C) == 0x000008, "Wrong alignment on ABP_WaterPointRipples_C");
static_assert(sizeof(ABP_WaterPointRipples_C) == 0x000338, "Wrong size on ABP_WaterPointRipples_C");
static_assert(offsetof(ABP_WaterPointRipples_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_WaterPointRipples_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_WaterPointRipples_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_WaterPointRipples_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_WaterPointRipples_C, RippleIndex) == 0x0002C0, "Member 'ABP_WaterPointRipples_C::RippleIndex' has a wrong offset!");
static_assert(offsetof(ABP_WaterPointRipples_C, RipplePos) == 0x0002C8, "Member 'ABP_WaterPointRipples_C::RipplePos' has a wrong offset!");
static_assert(offsetof(ABP_WaterPointRipples_C, Gen_Rippe_Actor) == 0x0002D8, "Member 'ABP_WaterPointRipples_C::Gen_Rippe_Actor' has a wrong offset!");
static_assert(offsetof(ABP_WaterPointRipples_C, AD_Dist) == 0x0002E8, "Member 'ABP_WaterPointRipples_C::AD_Dist' has a wrong offset!");
static_assert(offsetof(ABP_WaterPointRipples_C, AA_Actor) == 0x0002F8, "Member 'ABP_WaterPointRipples_C::AA_Actor' has a wrong offset!");
static_assert(offsetof(ABP_WaterPointRipples_C, F_Timer) == 0x000308, "Member 'ABP_WaterPointRipples_C::F_Timer' has a wrong offset!");
static_assert(offsetof(ABP_WaterPointRipples_C, E_GenWaterPointRipple) == 0x000310, "Member 'ABP_WaterPointRipples_C::E_GenWaterPointRipple' has a wrong offset!");
static_assert(offsetof(ABP_WaterPointRipples_C, E_DelWaterPointRipple) == 0x000320, "Member 'ABP_WaterPointRipples_C::E_DelWaterPointRipple' has a wrong offset!");
static_assert(offsetof(ABP_WaterPointRipples_C, EvenNumber) == 0x000330, "Member 'ABP_WaterPointRipples_C::EvenNumber' has a wrong offset!");

}

