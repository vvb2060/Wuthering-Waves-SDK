#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GPUNPCData

#include "Basic.hpp"

#include "GPUNPCData_classes.hpp"
#include "GPUNPCData_parameters.hpp"


namespace SDK
{

// Function GPUNPCData.GPUNPCData_C.随机起始动画时间噪声贴图
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D**                      OutNoiseTex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  OutNoiseIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGPUNPCData_C::随机起始动画时间噪声贴图(class UTexture2D** OutNoiseTex, int32* OutNoiseIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GPUNPCData_C", "随机起始动画时间噪声贴图");

	Params::GPUNPCData_C_随机起始动画时间噪声贴图 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutNoiseTex != nullptr)
		*OutNoiseTex = Parms.OutNoiseTex;

	if (OutNoiseIndex != nullptr)
		*OutNoiseIndex = Parms.OutNoiseIndex;
}


// Function GPUNPCData.GPUNPCData_C.生成MainMesh和SubMeshes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh**                   OutMainMesh                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class USkeletalMesh*>*           OutSubMeshes                                           (Parm, OutParm)

void UGPUNPCData_C::生成MainMesh和SubMeshes(class USkeletalMesh** OutMainMesh, TArray<class USkeletalMesh*>* OutSubMeshes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GPUNPCData_C", "生成MainMesh和SubMeshes");

	Params::GPUNPCData_C_生成MainMesh和SubMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMainMesh != nullptr)
		*OutMainMesh = Parms.OutMainMesh;

	if (OutSubMeshes != nullptr)
		*OutSubMeshes = std::move(Parms.OutSubMeshes);
}


// Function GPUNPCData.GPUNPCData_C.HasSetSkeletalMesh
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   HasSet                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGPUNPCData_C::HasSetSkeletalMesh(bool* HasSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GPUNPCData_C", "HasSetSkeletalMesh");

	Params::GPUNPCData_C_HasSetSkeletalMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasSet != nullptr)
		*HasSet = Parms.HasSet;
}


// Function GPUNPCData.GPUNPCData_C.GetMeshesFromNPCSetupData
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh**                   OutMainMesh                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class USkeletalMesh*>*           OutSubMeshes                                           (Parm, OutParm)

void UGPUNPCData_C::GetMeshesFromNPCSetupData(class USkeletalMesh** OutMainMesh, TArray<class USkeletalMesh*>* OutSubMeshes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GPUNPCData_C", "GetMeshesFromNPCSetupData");

	Params::GPUNPCData_C_GetMeshesFromNPCSetupData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMainMesh != nullptr)
		*OutMainMesh = Parms.OutMainMesh;

	if (OutSubMeshes != nullptr)
		*OutSubMeshes = std::move(Parms.OutSubMeshes);
}


// Function GPUNPCData.GPUNPCData_C.GetMaxNumTracks
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  OutMaxNumTracks                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGPUNPCData_C::GetMaxNumTracks(int32* OutMaxNumTracks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GPUNPCData_C", "GetMaxNumTracks");

	Params::GPUNPCData_C_GetMaxNumTracks Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMaxNumTracks != nullptr)
		*OutMaxNumTracks = Parms.OutMaxNumTracks;
}


// Function GPUNPCData.GPUNPCData_C.GetTotalNumFrames
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  OutTotalNumFrames                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGPUNPCData_C::GetTotalNumFrames(int32* OutTotalNumFrames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GPUNPCData_C", "GetTotalNumFrames");

	Params::GPUNPCData_C_GetTotalNumFrames Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutTotalNumFrames != nullptr)
		*OutTotalNumFrames = Parms.OutTotalNumFrames;
}


// Function GPUNPCData.GPUNPCData_C.HasCombinedBakedBoneTexture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGPUNPCData_C::HasCombinedBakedBoneTexture(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GPUNPCData_C", "HasCombinedBakedBoneTexture");

	Params::GPUNPCData_C_HasCombinedBakedBoneTexture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function GPUNPCData.GPUNPCData_C.清空非合批资源
// (Public, BlueprintCallable, BlueprintEvent)

void UGPUNPCData_C::清空非合批资源()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GPUNPCData_C", "清空非合批资源");

	UObject::ProcessEvent(Func, nullptr);
}

}

