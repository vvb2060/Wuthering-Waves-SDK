#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_LimitMove_Jinxi

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_LimitMove_Jinxi.GA_LimitMove_Jinxi_C.ExecuteUbergraph_GA_LimitMove_Jinxi
// 0x0500 (0x0500 - 0x0000)
struct GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate;            // 0x0010(0x0028)(ZeroConstructor)
	struct FGameplayTag                           K2Node_CustomEvent_Tag;                            // 0x0038(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ___struct_Variable;                                // 0x0044(0x000C)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0050(0x0028)(ZeroConstructor)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0080(0x0028)(ZeroConstructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B0(0x0028)(ZeroConstructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00D8(0x0028)(ZeroConstructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0100(0x0028)(ZeroConstructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0128(0x0028)(ZeroConstructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc___________1;                              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ___struct_Variable_1;                              // 0x0160(0x000C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_Tag_1;                          // 0x018C(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_____GA______________;                     // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_7;          // 0x01A8(0x0028)(ZeroConstructor)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc___________2;                              // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     K2Node_DynamicCast_AsTs_Base_Character;            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc__________SpeedRatio;                      // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________3;                              // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc______________;                            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________4;                              // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________5;                              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_______________1;                          // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     K2Node_DynamicCast_AsTs_Base_Character_1;          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0248(0x0028)(ZeroConstructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc___________6;                              // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x02B0(0x0028)(ZeroConstructor)
	class FString                                 CallFunc_____GA_______________1;                   // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x02F8(0x0028)(ZeroConstructor)
	class UAnimMontage*                           CallFunc___________7;                              // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x0330(0x0028)(ZeroConstructor)
	class ATsBaseCharacter_C*                     CallFunc___________8;                              // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0360(0x0020)()
	bool                                          CallFunc_______________2;                          // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x0388(0x0028)(ZeroConstructor)
	class ATsBaseCharacter_C*                     CallFunc___________9;                              // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x03B8(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________10;                             // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsKeyDown_ReturnValue;                    // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyDown_ReturnValue_1;                  // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FA[0x6];                                      // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x0400(0x0028)(ZeroConstructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0430(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTaskOwnerInterface> CallFunc_TaskWaitDelay_TaskOwner_CastInput;  // 0x0440(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class UGameplayTask_WaitDelay*                CallFunc_TaskWaitDelay_ReturnValue;                // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0458(0x0028)(ZeroConstructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x3];                                      // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc___________11;                             // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________12;                             // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x04A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________13;                             // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________14;                             // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_______________3;                          // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc__________SpeedRatio_1;                    // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________15;                             // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_1; // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EA[0x6];                                      // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue_1;         // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi) == 0x000008, "Wrong alignment on GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi");
static_assert(sizeof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi) == 0x000500, "Wrong size on GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, EntryPoint) == 0x000000, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc__________) == 0x000008, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CustomEvent_Tag) == 0x000038, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, ___struct_Variable) == 0x000044, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::___struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_1) == 0x000050, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_WaitDelay_ReturnValue) == 0x000078, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_2) == 0x000080, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000D8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_5) == 0x000100, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_6) == 0x000128, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000150, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________1) == 0x000158, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, ___struct_Variable_1) == 0x000160, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::___struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_GetDisplayName_ReturnValue) == 0x000170, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_GetObjectClass_ReturnValue) == 0x000180, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000188, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CustomEvent_Tag_1) == 0x00018C, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CustomEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_____GA______________) == 0x000198, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_____GA______________' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001A8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_Conv_NameToString_ReturnValue) == 0x0001D0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________2) == 0x0001E0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________2' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_IsValid_ReturnValue_1) == 0x0001E8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x0001F0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_DynamicCast_AsTs_Base_Character) == 0x0001F8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_DynamicCast_AsTs_Base_Character' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc__________SpeedRatio) == 0x000204, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc__________SpeedRatio' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________3) == 0x000208, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________3' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc______________) == 0x000210, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc______________' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________4) == 0x000218, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________4' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________5) == 0x000220, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________5' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_______________1) == 0x000228, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_______________1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x000230, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_DynamicCast_AsTs_Base_Character_1) == 0x000238, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_DynamicCast_AsTs_Base_Character_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_DynamicCast_bSuccess_1) == 0x000240, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_8) == 0x000248, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000270, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________6) == 0x000278, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________6' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000280, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_GetDisplayName_ReturnValue_1) == 0x000288, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_IsValid_ReturnValue_2) == 0x000298, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_GetObjectClass_ReturnValue_1) == 0x0002A0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x0002A8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_9) == 0x0002B0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_____GA_______________1) == 0x0002D8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_____GA_______________1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0002E8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_10) == 0x0002F8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________7) == 0x000320, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________7' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_IsValid_ReturnValue_3) == 0x000328, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_11) == 0x000330, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________8) == 0x000358, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________8' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000360, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_______________2) == 0x000380, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_______________2' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_12) == 0x000388, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________9) == 0x0003B0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________9' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x0003B8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x0003D8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0003E8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_Event_bWasCancelled) == 0x0003E9, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________10) == 0x0003F0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________10' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_IsKeyDown_ReturnValue) == 0x0003F8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_IsKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_IsKeyDown_ReturnValue_1) == 0x0003F9, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_IsKeyDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_13) == 0x000400, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_BooleanOR_ReturnValue) == 0x000428, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_Conv_IntToString_ReturnValue) == 0x000430, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_TaskWaitDelay_TaskOwner_CastInput) == 0x000440, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_TaskWaitDelay_TaskOwner_CastInput' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_TaskWaitDelay_ReturnValue) == 0x000450, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_TaskWaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, K2Node_CreateDelegate_OutputDelegate_14) == 0x000458, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_IsValid_ReturnValue_4) == 0x000480, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_And_IntInt_ReturnValue) == 0x000484, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________11) == 0x000488, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________11' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________12) == 0x000490, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________12' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_IsValid_ReturnValue_5) == 0x000498, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x0004A0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x0004B0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________13) == 0x0004B8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________13' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________14) == 0x0004C0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________14' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_______________3) == 0x0004C8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_______________3' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc__________SpeedRatio_1) == 0x0004CC, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc__________SpeedRatio_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc___________15) == 0x0004D0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc___________15' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_1) == 0x0004D8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x0004E0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_IsValid_ReturnValue_6) == 0x0004E8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_IsValid_ReturnValue_7) == 0x0004E9, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_WaitGameplayTagAdd_ReturnValue_1) == 0x0004F0, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_WaitGameplayTagAdd_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi, CallFunc_IsValid_ReturnValue_8) == 0x0004F8, "Member 'GA_LimitMove_Jinxi_C_ExecuteUbergraph_GA_LimitMove_Jinxi::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");

// Function GA_LimitMove_Jinxi.GA_LimitMove_Jinxi_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_LimitMove_Jinxi_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_LimitMove_Jinxi_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_LimitMove_Jinxi_C_K2_OnEndAbility");
static_assert(sizeof(GA_LimitMove_Jinxi_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_LimitMove_Jinxi_C_K2_OnEndAbility");
static_assert(offsetof(GA_LimitMove_Jinxi_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_LimitMove_Jinxi_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_LimitMove_Jinxi.GA_LimitMove_Jinxi_C.Added_21071CB943CD992BF8EFD6A398F3B46E
// 0x000C (0x000C - 0x0000)
struct GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A398F3B46E final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A398F3B46E) == 0x000004, "Wrong alignment on GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A398F3B46E");
static_assert(sizeof(GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A398F3B46E) == 0x00000C, "Wrong size on GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A398F3B46E");
static_assert(offsetof(GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A398F3B46E, Tag) == 0x000000, "Member 'GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A398F3B46E::Tag' has a wrong offset!");

// Function GA_LimitMove_Jinxi.GA_LimitMove_Jinxi_C.Added_21071CB943CD992BF8EFD6A3572C3CE0
// 0x000C (0x000C - 0x0000)
struct GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A3572C3CE0 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A3572C3CE0) == 0x000004, "Wrong alignment on GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A3572C3CE0");
static_assert(sizeof(GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A3572C3CE0) == 0x00000C, "Wrong size on GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A3572C3CE0");
static_assert(offsetof(GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A3572C3CE0, Tag) == 0x000000, "Member 'GA_LimitMove_Jinxi_C_Added_21071CB943CD992BF8EFD6A3572C3CE0::Tag' has a wrong offset!");

}

