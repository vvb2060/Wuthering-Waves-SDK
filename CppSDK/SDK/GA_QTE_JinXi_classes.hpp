#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_QTE_JinXi

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_Passive_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_QTE_JinXi.GA_QTE_JinXi_C
// 0x0028 (0x0598 - 0x0570)
class UGA_QTE_JinXi_C final : public UGa_Passive_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_QTE_JinXi_C;                     // 0x0570(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Entity_Id;                                         // 0x0578(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_QTE_Camera_C*                       QTECamera;                                         // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   技能ID;                                            // 0x0588(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_QTE_JinXi(int32 EntryPoint);
	void K2_ActivateAbility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_QTE_JinXi_C">();
	}
	static class UGA_QTE_JinXi_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_QTE_JinXi_C>();
	}
};
static_assert(alignof(UGA_QTE_JinXi_C) == 0x000008, "Wrong alignment on UGA_QTE_JinXi_C");
static_assert(sizeof(UGA_QTE_JinXi_C) == 0x000598, "Wrong size on UGA_QTE_JinXi_C");
static_assert(offsetof(UGA_QTE_JinXi_C, UberGraphFrame_GA_QTE_JinXi_C) == 0x000570, "Member 'UGA_QTE_JinXi_C::UberGraphFrame_GA_QTE_JinXi_C' has a wrong offset!");
static_assert(offsetof(UGA_QTE_JinXi_C, Entity_Id) == 0x000578, "Member 'UGA_QTE_JinXi_C::Entity_Id' has a wrong offset!");
static_assert(offsetof(UGA_QTE_JinXi_C, QTECamera) == 0x000580, "Member 'UGA_QTE_JinXi_C::QTECamera' has a wrong offset!");
static_assert(offsetof(UGA_QTE_JinXi_C, 技能ID) == 0x000588, "Member 'UGA_QTE_JinXi_C::技能ID' has a wrong offset!");

}

