#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SM_TaskMoveToTarget

#include "Basic.hpp"

#include "SMSystem_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SM_TaskMoveToTarget.BP_SM_TaskMoveToTarget_C
// 0x0018 (0x0048 - 0x0030)
class UBP_SM_TaskMoveToTarget_C final : public UASMTask
{
public:
	int32                                         目标类型;                                          // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         移动方式;                                          // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         停止距离;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         转向速度;                                          // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          结束时切换走路;                                    // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          允许打断;                                          // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SM_TaskMoveToTarget_C">();
	}
	static class UBP_SM_TaskMoveToTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SM_TaskMoveToTarget_C>();
	}
};
static_assert(alignof(UBP_SM_TaskMoveToTarget_C) == 0x000008, "Wrong alignment on UBP_SM_TaskMoveToTarget_C");
static_assert(sizeof(UBP_SM_TaskMoveToTarget_C) == 0x000048, "Wrong size on UBP_SM_TaskMoveToTarget_C");
static_assert(offsetof(UBP_SM_TaskMoveToTarget_C, 目标类型) == 0x000030, "Member 'UBP_SM_TaskMoveToTarget_C::目标类型' has a wrong offset!");
static_assert(offsetof(UBP_SM_TaskMoveToTarget_C, 移动方式) == 0x000034, "Member 'UBP_SM_TaskMoveToTarget_C::移动方式' has a wrong offset!");
static_assert(offsetof(UBP_SM_TaskMoveToTarget_C, 停止距离) == 0x000038, "Member 'UBP_SM_TaskMoveToTarget_C::停止距离' has a wrong offset!");
static_assert(offsetof(UBP_SM_TaskMoveToTarget_C, 转向速度) == 0x00003C, "Member 'UBP_SM_TaskMoveToTarget_C::转向速度' has a wrong offset!");
static_assert(offsetof(UBP_SM_TaskMoveToTarget_C, 结束时切换走路) == 0x000040, "Member 'UBP_SM_TaskMoveToTarget_C::结束时切换走路' has a wrong offset!");
static_assert(offsetof(UBP_SM_TaskMoveToTarget_C, 允许打断) == 0x000041, "Member 'UBP_SM_TaskMoveToTarget_C::允许打断' has a wrong offset!");

}

