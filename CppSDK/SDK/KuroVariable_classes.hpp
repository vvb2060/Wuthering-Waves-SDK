#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroVariable

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class KuroVariable.KuroVariableFunctionLibrary
// 0x0000 (0x0030 - 0x0030)
class UKuroVariableFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void Clear();
	static bool GetBoolValue(const class FString& Key, bool* Value);
	static bool GetFloatValue(const class FString& Key, float* Value);
	static bool GetIntValue(const class FString& Key, int32* Value);
	static bool GetObject(const class FString& Key, class UObject** Value);
	static bool GetStringValue(const class FString& Key, class FString* Value);
	static bool HasBoolValue(const class FString& Key);
	static bool HasFloatValue(const class FString& Key);
	static bool HasIntValue(const class FString& Key);
	static bool HasObject(const class FString& Key);
	static bool HasStringValue(const class FString& Key);
	static bool RemoveBoolValue(const class FString& Key);
	static bool RemoveFloatValue(const class FString& Key);
	static bool RemoveIntValue(const class FString& Key);
	static bool RemoveObject(const class FString& Key);
	static bool RemoveStringValue(const class FString& Key);
	static bool SetBoolValue(const class FString& Key, const bool Value);
	static bool SetFloatValue(const class FString& Key, const float Value);
	static bool SetIntValue(const class FString& Key, const int32 Value);
	static bool SetObject(const class FString& Key, class UObject* Value);
	static bool SetStringValue(const class FString& Key, const class FString& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroVariableFunctionLibrary">();
	}
	static class UKuroVariableFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroVariableFunctionLibrary>();
	}
};
static_assert(alignof(UKuroVariableFunctionLibrary) == 0x000008, "Wrong alignment on UKuroVariableFunctionLibrary");
static_assert(sizeof(UKuroVariableFunctionLibrary) == 0x000030, "Wrong size on UKuroVariableFunctionLibrary");

}

