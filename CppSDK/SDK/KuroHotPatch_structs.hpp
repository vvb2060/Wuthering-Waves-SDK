#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroHotPatch

#include "Basic.hpp"


namespace SDK
{

// Enum KuroHotPatch.EKuroDownloadState
// NumValues: 0x0009
enum class EKuroDownloadState : uint8
{
	None                                     = 0,
	HttpError                                = 1,
	FileRenameError                          = 2,
	ValidateError                            = 3,
	OpenToWriteError                         = 4,
	NotEnoughSpace                           = 5,
	DownloadCanceled                         = 6,
	DownloadSuccess                          = 7,
	EKuroDownloadState_MAX                   = 8,
};

// ScriptStruct KuroHotPatch.KuroCheckInfoEntry
// 0x0050 (0x0050 - 0x0000)
struct FKuroCheckInfoEntry final
{
public:
	class FString                                 FileName;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FilePath;                                          // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Hash;                                              // 0x0020(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Size;                                              // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Url;                                               // 0x0038(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedRestart;                                       // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Result;                                            // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FKuroCheckInfoEntry) == 0x000008, "Wrong alignment on FKuroCheckInfoEntry");
static_assert(sizeof(FKuroCheckInfoEntry) == 0x000050, "Wrong size on FKuroCheckInfoEntry");
static_assert(offsetof(FKuroCheckInfoEntry, FileName) == 0x000000, "Member 'FKuroCheckInfoEntry::FileName' has a wrong offset!");
static_assert(offsetof(FKuroCheckInfoEntry, FilePath) == 0x000010, "Member 'FKuroCheckInfoEntry::FilePath' has a wrong offset!");
static_assert(offsetof(FKuroCheckInfoEntry, Hash) == 0x000020, "Member 'FKuroCheckInfoEntry::Hash' has a wrong offset!");
static_assert(offsetof(FKuroCheckInfoEntry, Size) == 0x000030, "Member 'FKuroCheckInfoEntry::Size' has a wrong offset!");
static_assert(offsetof(FKuroCheckInfoEntry, Url) == 0x000038, "Member 'FKuroCheckInfoEntry::Url' has a wrong offset!");
static_assert(offsetof(FKuroCheckInfoEntry, NeedRestart) == 0x000048, "Member 'FKuroCheckInfoEntry::NeedRestart' has a wrong offset!");
static_assert(offsetof(FKuroCheckInfoEntry, Result) == 0x00004C, "Member 'FKuroCheckInfoEntry::Result' has a wrong offset!");

}

