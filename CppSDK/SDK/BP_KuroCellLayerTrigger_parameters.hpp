#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroCellLayerTrigger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_KuroCellLayerTrigger.BP_KuroCellLayerTrigger_C.BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B8 (0x00B8 - 0x0000)
struct BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0094)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B8, "Wrong size on BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_EnterBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_KuroCellLayerTrigger.BP_KuroCellLayerTrigger_C.BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_KuroCellLayerTrigger_C_BndEvt__BP_KuroCellLayerTrigger_LeaveBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_KuroCellLayerTrigger.BP_KuroCellLayerTrigger_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_KuroCellLayerTrigger_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroCellLayerTrigger_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_KuroCellLayerTrigger_C_ReceiveTick");
static_assert(sizeof(BP_KuroCellLayerTrigger_C_ReceiveTick) == 0x000004, "Wrong size on BP_KuroCellLayerTrigger_C_ReceiveTick");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_KuroCellLayerTrigger_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_KuroCellLayerTrigger.BP_KuroCellLayerTrigger_C.ExecuteUbergraph_BP_KuroCellLayerTrigger
// 0x0120 (0x0120 - 0x0000)
struct BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0094)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin_1;              // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent_1;           // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius_1;        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStreamingSourceInSide_ReturnValue;      // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStreamingSourceInSide_ReturnValue_1;    // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger) == 0x000008, "Wrong alignment on BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger");
static_assert(sizeof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger) == 0x000120, "Wrong size on BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, EntryPoint) == 0x000000, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, CallFunc_Not_PreBool_ReturnValue_1) == 0x000006, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, CallFunc_BooleanAND_ReturnValue_1) == 0x000007, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000008, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000010, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000018, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000020, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000C0, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, K2Node_ComponentBoundEvent_OtherActor) == 0x0000C8, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, K2Node_ComponentBoundEvent_OtherComp) == 0x0000D0, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000D8, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, CallFunc_GetComponentBounds_Origin) == 0x0000DC, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, CallFunc_GetComponentBounds_BoxExtent) == 0x0000E8, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, CallFunc_GetComponentBounds_SphereRadius) == 0x0000F4, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, CallFunc_GetComponentBounds_Origin_1) == 0x0000F8, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::CallFunc_GetComponentBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, CallFunc_GetComponentBounds_BoxExtent_1) == 0x000104, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::CallFunc_GetComponentBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, CallFunc_GetComponentBounds_SphereRadius_1) == 0x000110, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::CallFunc_GetComponentBounds_SphereRadius_1' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, CallFunc_IsStreamingSourceInSide_ReturnValue) == 0x000114, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::CallFunc_IsStreamingSourceInSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, CallFunc_IsStreamingSourceInSide_ReturnValue_1) == 0x000115, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::CallFunc_IsStreamingSourceInSide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger, K2Node_Event_DeltaSeconds) == 0x000118, "Member 'BP_KuroCellLayerTrigger_C_ExecuteUbergraph_BP_KuroCellLayerTrigger::K2Node_Event_DeltaSeconds' has a wrong offset!");

}

