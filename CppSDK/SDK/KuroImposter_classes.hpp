#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroImposter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class KuroImposter.KuroImposterCommandlet
// 0x0000 (0x0088 - 0x0088)
class UKuroImposterCommandlet final : public UCommandlet
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroImposterCommandlet">();
	}
	static class UKuroImposterCommandlet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroImposterCommandlet>();
	}
};
static_assert(alignof(UKuroImposterCommandlet) == 0x000008, "Wrong alignment on UKuroImposterCommandlet");
static_assert(sizeof(UKuroImposterCommandlet) == 0x000088, "Wrong size on UKuroImposterCommandlet");

// Class KuroImposter.KuroImposterComponent
// 0x0040 (0x0260 - 0x0220)
class UKuroImposterComponent final : public USceneComponent
{
public:
	uint8                                         Pad_218[0xC];                                      // 0x0218(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bPreview;                                          // 0x0224(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPerPlatformFloat                      ImposterScreenSizeScaleLod0;                       // 0x0228(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerPlatformFloat                      ImposterScreenSizeScaleLod1;                       // 0x022C(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ImposterUseComtomBelowThr;                         // 0x0230(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPerPlatformFloat                      ImposterBelowThr;                                  // 0x0234(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_238[0x28];                                     // 0x0238(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroImposterComponent">();
	}
	static class UKuroImposterComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroImposterComponent>();
	}
};
static_assert(alignof(UKuroImposterComponent) == 0x000010, "Wrong alignment on UKuroImposterComponent");
static_assert(sizeof(UKuroImposterComponent) == 0x000260, "Wrong size on UKuroImposterComponent");
static_assert(offsetof(UKuroImposterComponent, bPreview) == 0x000224, "Member 'UKuroImposterComponent::bPreview' has a wrong offset!");
static_assert(offsetof(UKuroImposterComponent, ImposterScreenSizeScaleLod0) == 0x000228, "Member 'UKuroImposterComponent::ImposterScreenSizeScaleLod0' has a wrong offset!");
static_assert(offsetof(UKuroImposterComponent, ImposterScreenSizeScaleLod1) == 0x00022C, "Member 'UKuroImposterComponent::ImposterScreenSizeScaleLod1' has a wrong offset!");
static_assert(offsetof(UKuroImposterComponent, ImposterUseComtomBelowThr) == 0x000230, "Member 'UKuroImposterComponent::ImposterUseComtomBelowThr' has a wrong offset!");
static_assert(offsetof(UKuroImposterComponent, ImposterBelowThr) == 0x000234, "Member 'UKuroImposterComponent::ImposterBelowThr' has a wrong offset!");

// Class KuroImposter.KuroImposterUpdater
// 0x0008 (0x02B8 - 0x02B0)
class AKuroImposterUpdater final : public AActor
{
public:
	bool                                          bEnabled;                                          // 0x02B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSearchMainLight;                                  // 0x02B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FillAllInstGlobalColor();
	void UpdateImposters(class UDirectionalLightComponent* DirLight, float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroImposterUpdater">();
	}
	static class AKuroImposterUpdater* GetDefaultObj()
	{
		return GetDefaultObjImpl<AKuroImposterUpdater>();
	}
};
static_assert(alignof(AKuroImposterUpdater) == 0x000008, "Wrong alignment on AKuroImposterUpdater");
static_assert(sizeof(AKuroImposterUpdater) == 0x0002B8, "Wrong size on AKuroImposterUpdater");
static_assert(offsetof(AKuroImposterUpdater, bEnabled) == 0x0002B0, "Member 'AKuroImposterUpdater::bEnabled' has a wrong offset!");
static_assert(offsetof(AKuroImposterUpdater, bSearchMainLight) == 0x0002B1, "Member 'AKuroImposterUpdater::bSearchMainLight' has a wrong offset!");

// Class KuroImposter.KuroImposterUtility
// 0x0000 (0x0030 - 0x0030)
class UKuroImposterUtility final : public UBlueprintFunctionLibrary
{
public:
	static void GenerateAll(class UWorld* EditorWorld, bool bBake, bool bClear);
	static void RemoveAll(class UWorld* EditorWorld, bool bClear);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroImposterUtility">();
	}
	static class UKuroImposterUtility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroImposterUtility>();
	}
};
static_assert(alignof(UKuroImposterUtility) == 0x000008, "Wrong alignment on UKuroImposterUtility");
static_assert(sizeof(UKuroImposterUtility) == 0x000030, "Wrong size on UKuroImposterUtility");

}

