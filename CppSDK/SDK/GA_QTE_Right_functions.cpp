#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_QTE_Right

#include "Basic.hpp"

#include "GA_QTE_Right_classes.hpp"
#include "GA_QTE_Right_parameters.hpp"


namespace SDK
{

// Function GA_QTE_Right.GA_QTE_Right_C.ExecuteUbergraph_GA_QTE_Right
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_QTE_Right_C::ExecuteUbergraph_GA_QTE_Right(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "ExecuteUbergraph_GA_QTE_Right");

	Params::GA_QTE_Right_C_ExecuteUbergraph_GA_QTE_Right Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_QTE_Right.GA_QTE_Right_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_QTE_Right_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "K2_OnEndAbility");

	Params::GA_QTE_Right_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_QTE_Right.GA_QTE_Right_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_QTE_Right_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.OnCompleted_5D118C384AE61F1C80292E8183342C2D
// (BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::OnCompleted_5D118C384AE61F1C80292E8183342C2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "OnCompleted_5D118C384AE61F1C80292E8183342C2D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.OnBlendOut_5D118C384AE61F1C80292E8183342C2D
// (BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::OnBlendOut_5D118C384AE61F1C80292E8183342C2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "OnBlendOut_5D118C384AE61F1C80292E8183342C2D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.OnInterrupted_5D118C384AE61F1C80292E8183342C2D
// (BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::OnInterrupted_5D118C384AE61F1C80292E8183342C2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "OnInterrupted_5D118C384AE61F1C80292E8183342C2D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.OnCancelled_5D118C384AE61F1C80292E8183342C2D
// (BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::OnCancelled_5D118C384AE61F1C80292E8183342C2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "OnCancelled_5D118C384AE61F1C80292E8183342C2D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.OnTick_5D118C384AE61F1C80292E8183342C2D
// (BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::OnTick_5D118C384AE61F1C80292E8183342C2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "OnTick_5D118C384AE61F1C80292E8183342C2D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.OnCompleted_5D118C384AE61F1C80292E817A8CD455
// (BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::OnCompleted_5D118C384AE61F1C80292E817A8CD455()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "OnCompleted_5D118C384AE61F1C80292E817A8CD455");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.OnBlendOut_5D118C384AE61F1C80292E817A8CD455
// (BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::OnBlendOut_5D118C384AE61F1C80292E817A8CD455()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "OnBlendOut_5D118C384AE61F1C80292E817A8CD455");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.OnInterrupted_5D118C384AE61F1C80292E817A8CD455
// (BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::OnInterrupted_5D118C384AE61F1C80292E817A8CD455()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "OnInterrupted_5D118C384AE61F1C80292E817A8CD455");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.OnCancelled_5D118C384AE61F1C80292E817A8CD455
// (BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::OnCancelled_5D118C384AE61F1C80292E817A8CD455()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "OnCancelled_5D118C384AE61F1C80292E817A8CD455");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.OnTick_5D118C384AE61F1C80292E817A8CD455
// (BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::OnTick_5D118C384AE61F1C80292E817A8CD455()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "OnTick_5D118C384AE61F1C80292E817A8CD455");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.设置最终位置及朝向
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::设置最终位置及朝向()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "设置最终位置及朝向");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.设置当前交互点
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::设置当前交互点()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "设置当前交互点");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.设置安全点位置及朝向
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::设置安全点位置及朝向()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "设置安全点位置及朝向");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.瞬移特效
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::瞬移特效()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "瞬移特效");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_QTE_Right.GA_QTE_Right_C.获取镜头变换
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransformDouble*                镜头变换                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void UGA_QTE_Right_C::获取镜头变换(struct FTransformDouble* 镜头变换)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "获取镜头变换");

	Params::GA_QTE_Right_C_获取镜头变换 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (镜头变换 != nullptr)
		*镜头变换 = std::move(Parms.镜头变换);
}


// Function GA_QTE_Right.GA_QTE_Right_C.依据斩击方向选择匹配切屏特效
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_QTE_Right_C::依据斩击方向选择匹配切屏特效()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_QTE_Right_C", "依据斩击方向选择匹配切屏特效");

	UObject::ProcessEvent(Func, nullptr);
}

}

