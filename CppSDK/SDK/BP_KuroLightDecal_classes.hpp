#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroLightDecal

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KuroLightDecal.BP_KuroLightDecal_C
// 0x0100 (0x03B8 - 0x02B8)
class ABP_KuroLightDecal_C final : public ADecalActor
{
public:
	float                                         FadeScreenSize;                                    // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              DecalMaterial;                                     // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, float>                      Scalars;                                           // 0x02C8(0x0050)(Edit, BlueprintVisible)
	TMap<class FName, class UTexture*>            Textures;                                          // 0x0318(0x0050)(Edit, BlueprintVisible)
	TMap<class FName, struct FLinearColor>        Vectors;                                           // 0x0368(0x0050)(Edit, BlueprintVisible)

public:
	void updateMaterialParameters();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KuroLightDecal_C">();
	}
	static class ABP_KuroLightDecal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KuroLightDecal_C>();
	}
};
static_assert(alignof(ABP_KuroLightDecal_C) == 0x000008, "Wrong alignment on ABP_KuroLightDecal_C");
static_assert(sizeof(ABP_KuroLightDecal_C) == 0x0003B8, "Wrong size on ABP_KuroLightDecal_C");
static_assert(offsetof(ABP_KuroLightDecal_C, FadeScreenSize) == 0x0002B8, "Member 'ABP_KuroLightDecal_C::FadeScreenSize' has a wrong offset!");
static_assert(offsetof(ABP_KuroLightDecal_C, DecalMaterial) == 0x0002C0, "Member 'ABP_KuroLightDecal_C::DecalMaterial' has a wrong offset!");
static_assert(offsetof(ABP_KuroLightDecal_C, Scalars) == 0x0002C8, "Member 'ABP_KuroLightDecal_C::Scalars' has a wrong offset!");
static_assert(offsetof(ABP_KuroLightDecal_C, Textures) == 0x000318, "Member 'ABP_KuroLightDecal_C::Textures' has a wrong offset!");
static_assert(offsetof(ABP_KuroLightDecal_C, Vectors) == 0x000368, "Member 'ABP_KuroLightDecal_C::Vectors' has a wrong offset!");

}

